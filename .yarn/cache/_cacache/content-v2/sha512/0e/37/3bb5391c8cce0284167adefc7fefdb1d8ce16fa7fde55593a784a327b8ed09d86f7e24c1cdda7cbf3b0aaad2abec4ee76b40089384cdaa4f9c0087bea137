{"_id":"@salesforce/sfdx-lwc-jest","_rev":"141-9f3694e83c0a77ebfbd6a21fb6c5d968","name":"@salesforce/sfdx-lwc-jest","dist-tags":{"latest":"1.1.3","spring20":"0.7.1","winter20":"0.6.2","summer20":"0.9.2","next":"0.14.0","winter21":"0.10.2","summer21":"0.12.6","winter22":"1.1.0","spring22":"1.1.0","summer22":"1.1.2","prerelease":"1.2.0"},"versions":{"0.5.3":{"name":"@salesforce/sfdx-lwc-jest","version":"0.5.3","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"0.37.4-220.2","@lwc/engine":"0.37.4-220.2","@lwc/jest-preset":"0.37.4-220.2","@lwc/jest-resolver":"0.37.4-220.2","@lwc/jest-serializer":"0.37.4-220.2","@lwc/jest-transformer":"0.37.4-220.2","@lwc/module-resolver":"0.37.4-220.2","@lwc/wire-service":"0.37.4-220.2","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^10.0.3"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"gitHead":"94ba45e9086ba34e7bb20c37b7ce3c1db535936b","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.5.3","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-cKxl9KMptznyIvmzl3+KwgBazpufoDK1g8oC7WhnLezsSiCs4pJIj/DCpsuTuScjP5E3dkQEBp7vceaQjUg1cg==","shasum":"5171c2f87fc88227bfa325649c8f925e35c1c16c","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.5.3.tgz","fileCount":180,"unpackedSize":87269,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTKw5CRA9TVsSAnZWagAAEz8P/3bWurxnhyxveFzhIs9E\nSBweO30ExKiWSKR4Yoq8kPpWl7NCFkbJfTKqtzB9tpu41DyCN/n03nADRRdc\nijitJDc7AtfkpWIWIQ2PQ2H+pzSRDq9LZP+300WKis/zQDspgtWHQnDxOKC2\nYxyuD/538q9Op2u3si1Tav9MzHfjQ9/Ghee7j6NMKdxL006wv4exClh9hBAm\nnCegbgaizuA3eH8UA5nnp+jSVSNgK/vDnXqtQHQPHwWXNkyTJR1SQf1bit8w\nh4rTwrW2TVV4umDyv4MwJ9+RH+R0aoILEpoJUzFoMk9FfsYptFm5assih0aT\nk1PH0FtVdr9Em7sRcHTzzO/bitirwbNKaXQnCmHEcRj5rTtXbgx2fG1t0SiH\n+r0aOcYduoyX0UenGfQqGKA/O9qeLk2b7uaNFEbISzqM6e/8OJxMwxTevU1k\nXFXvGQwVuWBOxC1IODUW6hJ5kij8Dr11oDG516+cHFvHWDWgC0qPSWMgAIVz\nBghya+5MMfnysX/Lg4Lz9tbjoI1PBAyokarANvrN8YxE3qugWEuXxRdE/To6\njhNEKnrY5ZhCGUt5bVLgsD1PTfqaHFFhD7okZrHRoZhOahjDQZTW4ro8ai3o\nSpG3rVA9P3ptDnEAN1QFR6U5J4E3ZMQ7S7ZjzyzF7143XSpLzPIlD2Wne3q3\nl3Rm\r\n=8PK5\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICl70yLDM1IEkB8CMqjUd+eL6mEGekZ1jaVClyw9jVAHAiEA8YD73uCxs5pbd/JZQLZvReN+mncjfKNHpxGApmUcMts="}]},"maintainers":[{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.5.3_1565305913077_0.37396380097856063"},"_hasShrinkwrap":false},"0.5.4":{"name":"@salesforce/sfdx-lwc-jest","version":"0.5.4","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"0.37.4-220.2","@lwc/engine":"0.37.4-220.2","@lwc/jest-preset":"0.37.4-220.2","@lwc/jest-resolver":"0.37.4-220.2","@lwc/jest-serializer":"0.37.4-220.2","@lwc/jest-transformer":"0.37.4-220.2","@lwc/module-resolver":"0.37.4-220.2","@lwc/wire-service":"0.37.4-220.2","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^10.0.3"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"gitHead":"98e5d3616b2b69ef767ea4294ec2682516fd2aa7","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.5.4","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-CcPrXGECEl6TR9qNu3mG8q4PxNoT0YUMvDVihwazw1/kAQhYVrYtMUB3gBuxJDoKM9azvhr2wsKxE4ZMGuQnIg==","shasum":"b0d8d9fc565143183ccaf18ab85d4c86b978010e","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.5.4.tgz","fileCount":180,"unpackedSize":87309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTLJZCRA9TVsSAnZWagAAMrcP/3nE0rHiqhxkF7ltaLUz\nulNkqUu+5S0W8RH8j24+MnQPCQ+Ct6jIhy2qODfv86aXuD2gCN+VPvSFdrM4\ne4RwXaiupfUyutLPzFbgtCYOQAVxWQ4uYsaalp5qrliDzxjVzbV5++VOlTQw\n3TnJJclVepWIaj7njG9Q6qhhliIyTJsUZBCQLg2tWgAwIMFsA95bMUWwHZ4c\ncv+oSIuWk89veZCg0FJSUJ1GkOSsPa8UkQReHWRCsFy6zp4VaUWcX0b9AZiH\niCPH2S04ORyaA7+e91vVXufEaCpwiV0NqeK/Dlsy42EuSR++tZX6sUDEM6Bx\ne8nlkyAs3SrHcWdOSc/8syoEkVmLM2Qv2sCKG8UTBdhTAp4buMTE5hsovUcb\nxbr35CdGCKY+KiYMMelMq2lfPq7PMGl+F6ZXiPUqoMpZPvvGVnUwEV0MZQMB\nIsnUo2GBChCd27FPSOp1JUs2DHUpTiW536LkcLS1M/4KJsbeMdsSSOlV9j3R\nqhXxPE76DU3xqWO7+rb1Pg2bbRVDk8ZkjBsEAnPTqZRcm/cOImEADOLfAsjn\nE2fSosc2fHkpP4cm24RbWZVjoKDq7W4Ql3acUxmbTL1hRV6mdyn5UsF1PSsD\nOepkXzWAFbdNms3MamILXPOP1qHNOZP/n3GjusKXGHcYeOTDUwZ04sX8KHkT\nfYi8\r\n=CNPM\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGqOhS+sT92q7XafdsEojl/zEGFIY4MwBeroSZNx1RFhAiAiRo1lHE4D35qxPY9XExpl2L4Glnb+wACBvTO8RgqC6A=="}]},"maintainers":[{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.5.4_1565307480600_0.9637405927631073"},"_hasShrinkwrap":false},"0.6.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.6.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.0.2-222.15","@lwc/engine":"1.0.2-222.15","@lwc/jest-preset":"^1.0.0","@lwc/jest-resolver":"^1.0.0","@lwc/jest-serializer":"^1.0.0","@lwc/jest-transformer":"^1.0.0","@lwc/module-resolver":"1.0.2-222.15","@lwc/wire-service":"1.0.2-222.15","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^10.0.3"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in package.json to execute `lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"lwc-jest\",\n        \"test:unit:watch\": \"lwc-jest --watch\",\n        \"test:unit:debug\": \"lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  lwc-jest --coverage  Collect coverage and display in output\n  lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nlwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n- Put a `debugger;` into your code\n- Open `chrome://inspect`\n- Run `lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n```\nlwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n- From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n- If you're prompted for an Environment choose any value.\n- Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeArgs\": [\n        \"--inspect-brk\",\n        \"${workspaceRoot}/node_modules/.bin/jest\",\n        \"--runInBand\"\n      ],\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"port\": 9229\n    }\n  ]\n}\n```\n- Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n- To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    }\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n  @api label\n  // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json. \n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"8b6cfca60adb7f1c5c1fbf0177f072484cf678ef","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.6.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-Pw35KatgXFJMHNSvt9MQmCfwJZYpX3su2wfd30mfGviIxgdaYcXFBMM3RXMKh3Z8v0GfLWV5Sj/BbOIv0zqgJA==","shasum":"22b598f4c5f6ead10c3eeaf7a3057792b5d91b09","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.6.0.tgz","fileCount":180,"unpackedSize":87285,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUvipCRA9TVsSAnZWagAAQkEP/j8qxZmOiBQDu33sG9wa\ncR2ETgQc1z6wGyi0eVDzLFYUFy4MXBCgfiIxvXLv1eOOocc5YoIJIgO23E5A\ni4OlVFdIlFq5v8cF0IZjbADYyQlBpHjBwf7Z6e7yj1S7AtL/sc4X9wQBV59Y\nFlS2NLhUEiR1f0JxzXD6casy20KyzRRSws/XDD/xEPqyYRZBlKMomX+KRu/J\nPEWoojnxrWp4bX79kUYndCLuym9JMkAwXHx14VVIeY7oaTxrKwx3F+VHkfSr\nN/uuF28/SV0bxGrBArjKq7YUJ7pgvH7BeajMY3tiqX4G09X/pht3vtb8XfDG\ni/pKgaD3jsWlNLx6ebTUWJljWozOMSd6QWEeq15/BUBe5fnRCzDtWCGDt9sg\nHQBo6oiBy1gzfGqQJZnI2PhNaxSEAqj6WCgwJa+DhTZc3VUpzVJROGNpxBM6\nEmMhex+w7s0l08f8uhNVBvBo4dN/IgQqtWnRWQR2R0D/iu4Tc7108Plb++Fj\n6HwEiBuvd2AytevOztj9QT2afG43kvTmfgKlZpLF5fn3k1SDAj1Zj917YlJS\nNgQfeYnotSB1ACz1dysc5D0sm6iAmgtzJwEZPyk2KCmycwoV5WhUjuaV2WAi\nAwT1ablST55obecql4FCcdEm2ONFIUYK9s3+9vNkcSJgwM2OW0inFSftPty8\n+pbo\r\n=ZLTx\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE3A/lt8d3qoPCWW31pR9/fmsBUHnQGhSqodEk6nLZUmAiAApGL6j+WMnbw3IwkqmVMF+uZD+jhs7ZakfuwMcn++HQ=="}]},"maintainers":[{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.6.0_1565718696557_0.5615679694120792"},"_hasShrinkwrap":false},"0.6.1-alpha1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.6.1-alpha1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.0.2-222.23","@lwc/engine":"1.0.2-222.23","@lwc/jest-preset":"2.2.0","@lwc/jest-resolver":"2.2.0","@lwc/jest-serializer":"2.2.0","@lwc/jest-transformer":"2.2.0","@lwc/module-resolver":"1.0.2-222.23","@lwc/wire-service":"1.0.2-222.23","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^10.0.3"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in package.json to execute `lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"lwc-jest\",\n        \"test:unit:watch\": \"lwc-jest --watch\",\n        \"test:unit:debug\": \"lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  lwc-jest --coverage  Collect coverage and display in output\n  lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nlwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n- Put a `debugger;` into your code\n- Open `chrome://inspect`\n- Run `lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n```\nlwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n- From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n- If you're prompted for an Environment choose any value.\n- Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeArgs\": [\n        \"--inspect-brk\",\n        \"${workspaceRoot}/node_modules/.bin/jest\",\n        \"--runInBand\"\n      ],\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"port\": 9229\n    }\n  ]\n}\n```\n- Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n- To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    }\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n  @api label\n  // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json. \n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"63e58111fdbf3da77f58d4ae19bfa530a1f9ece4","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.6.1-alpha1","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-cLvvNgfLFQ+BlEuh2xBbLb2AOJwhX5KNj1Jy9vy1ze6SZx4yKl3xIv0MWCsF4r9umm1hIM7TvS02AVEYUgO7vg==","shasum":"8987230ad9488629a7f2a1a5bab8682575d7ddef","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.6.1-alpha1.tgz","fileCount":180,"unpackedSize":87288,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnN/sCRA9TVsSAnZWagAAfDYQAJyGoK5Z+bZi+eaXl5Gs\nKB2Cb3mQ2CRAi+buWhexC+UDJxsiQRBSG5vr/HDQ0OckHZZVyeAVwTVCX8pX\ncRXRHsKkDwRpXtu6saM5xEo6L+b0d/oPkqHDl0zmm9kOgNee5pKTE49XP4v/\nBRrP+rVvFCD7cNAVhJ4HuRkKDlzZHEBaJbmfYP3tGKesXO9HuXhOAyJHMsFh\nPt97ByyexxbKaMzj1VaMmVtZBApEPNCViDtN51f2SBHBraqUowNmX/OkgSdZ\nrAwhZN4WLxJlwkUApwzGTAJNeUS8xB46Zd9PvrMVnzo/c99TVGTyuMLfHDsG\nqX4S2dNnIvHm/khzUDm6Vx8rbDKH1MRMIjRezcTjmyfMJSSYpcybQdqw9GNr\njPFoKOrDDBxDkap4bRDkl3rJnKopW6G0UZodaO6+k1ilJBBzEVxGM0b1OEzL\nXZpXhTqIDvXDxI++PtY0CYs1DlTzvT+mXAj70aqU6Zq6jGWpVPd8zL3Owu6A\na8YOg7IlqAdGG4iF9y5Sj/5cnIFAoA454GF4pNjex3MiW5k5vgx2b4UKrc6L\nGLNEBdDt/gkblhPsSn+UitIYNEDMbc5Hnq+7rVkIaI10CnDU0Vuw3kLh9VFE\n2Z0AnZTDryG/fWA3qwCtWOuvCDnLofBWpw+8y22W5SN2YeHhPtrzsditCAv/\nV1VM\r\n=Fmcb\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAZA5vP9DmLNosO6VeTyIsBbT2fkHqEEHNCgwyX/vFWwAiB0kMuZ30FBVl3THhU+jnFiC85+bfBPt8LSshkMjWvN1g=="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.6.1-alpha1_1570562028192_0.47833892241863296"},"_hasShrinkwrap":false},"0.6.1-alpha2":{"name":"@salesforce/sfdx-lwc-jest","version":"0.6.1-alpha2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.0.2-222.23","@lwc/engine":"1.0.2-222.23","@lwc/jest-preset":"2.2.0","@lwc/jest-resolver":"2.2.0","@lwc/jest-serializer":"2.2.0","@lwc/jest-transformer":"2.2.0","@lwc/module-resolver":"1.0.2-222.23","@lwc/synthetic-shadow":"1.0.2-222.23","@lwc/wire-service":"1.0.2-222.23","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^10.0.3"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in package.json to execute `lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"lwc-jest\",\n        \"test:unit:watch\": \"lwc-jest --watch\",\n        \"test:unit:debug\": \"lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  lwc-jest --coverage  Collect coverage and display in output\n  lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nlwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n- Put a `debugger;` into your code\n- Open `chrome://inspect`\n- Run `lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n```\nlwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n- From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n- If you're prompted for an Environment choose any value.\n- Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeArgs\": [\n        \"--inspect-brk\",\n        \"${workspaceRoot}/node_modules/.bin/jest\",\n        \"--runInBand\"\n      ],\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"port\": 9229\n    }\n  ]\n}\n```\n- Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n- To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    }\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n  @api label\n  // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json. \n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"18ff1ab55d4e6466a064b688d947b560c5e7f25d","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.6.1-alpha2","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-J49l/uNUZX05IFQQWZrKFL0mfWxCPAntDx0iHou3V6UTcEkyC5pGFkKEIx/h5NKwBCWokUio/rRdUZNiNPHNPg==","shasum":"2648df45a3231b7a08e2ad707d2f86d6a4b665c7","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.6.1-alpha2.tgz","fileCount":180,"unpackedSize":87333,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnOyJCRA9TVsSAnZWagAAI2kQAIE/gst6QO1Dn+exblzy\nyxOmocQ0eA8q48koIYM59ZYtVrja4+wcZ2vu8a1n8uuVtqtBQJxMS/ZEXJoB\n18/y2M1/0JnqQ7XEQ/dtyNBsVCxBRV79sAvRV3Pyxe9fD5YGXtJfdPTiML+M\nRSbkQhf/Phdm3UhE7zA8xbU+OWrEcWOsVyB7XGAX2h6/nEQUcl9tBT+P5Fu+\nZ17SEU1QF41b7J0o+/6TuvJIepKQ61O10suLDHg5L6R0GT5/UYPC9wS6h7Hk\nRLi0qEeoJbkqXc/BUTjr0UtDbcNqjQTvXDCAooshz3ysjh4aeM7GwI7znPwy\nnSsdxo5k9w6t5+tBuEG4CoQzoOHBz2lYXfPJeKE90i1f5ZLYCV1XCcaiL4DH\nxHacLVygDjwJcOKXQEE+whLzgWO9jVQ3E7Gdhdwx9kW9eL+999KH2V5oqQyA\nz8gUEMnSFo3zsq/jBCpyRCI1gFJkesC9hCCPprpP1frVMLolFYLwi1dBwwui\nH/9752nuVqrP6ITDspJk4hIQkTNfQHqMr5FR4P7OJ1l9/uM6fVDlMHopUKEE\nya6wpvJMCb40/tykI5+ED9QMoXcnLX/Iy9yahk31p8pCxKXdCdv2gzGHSjEa\nEnsU3mVmym46e9gMt6qltqoZ8eWMiCXjDzW8amFu9UqsRI5B/H1cTjrWi5T1\nizW4\r\n=kJoA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAXTBv8xiESo1WSlSSftx156sI5WaltSqJVH11K7oOvMAiEAzATSioq5blHzeUX64NuYRUfAemCnbP08qZ1OyNm3gKc="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.6.1-alpha2_1570565257170_0.1624158268213134"},"_hasShrinkwrap":false},"0.5.5":{"name":"@salesforce/sfdx-lwc-jest","version":"0.5.5","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"0.37.4-220.2","@lwc/engine":"0.37.4-220.2","@lwc/jest-preset":"0.37.4-220.2","@lwc/jest-resolver":"0.37.4-220.2","@lwc/jest-serializer":"0.37.4-220.2","@lwc/jest-transformer":"0.37.4-220.2","@lwc/module-resolver":"0.37.4-220.2","@lwc/wire-service":"0.37.4-220.2","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^13.0.0"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"gitHead":"a631c1440ed78675b90758c8997c101104a55a55","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.5.5","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-XzY9ev46mLtJ4ijUkr+k8MrzEtUrmcRIYPF233h81WQRQx7hLPrPcg9cxDROIcmIOjRxtG/dvsMg89t5emUxbw==","shasum":"17a7dee756730723a6a31796367bc9b0419b1524","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.5.5.tgz","fileCount":180,"unpackedSize":88334,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnSwMCRA9TVsSAnZWagAAfrAP/22f7QXn8hbyZqTldur0\n+pB0fsjRmT0WQyS4HMe/YukDc/YO2cwj0geI3CE6cPxUpGkKRVGP1Mf/Be9X\ner64ME5DpJxuRJBBHrLhpceUKWGW2tYtMiZbrJOJX/KGzz+HTkzRR1urj5au\nSRJPG0KA71FZBU5DuDl3hnuVigTutscCXDm95GeLnQV9GQP3SRwO0Zk51F17\noioWtzz/kjzHtHn1uGnIEidMjx2C3WFqNUZ4D85xGDlJtaVUBXwz9m7MHi8k\nX0mghRtolwHtBCwG/MFpBEIzOJcCJzWq1fdqDZkNH7XO9ZjCfnPhGSC/tS7M\nPHj1GEEQDdQC3+Ra1gDd5eDN3AIpus7101qwIfg2WDEKSGC8ttPCw4l8hq2g\nyVCpZUiUC2fhs5CGuKxJU//FcIrI9Wce2sN6e+71JSEg/uYAePPqafDNPk9q\nYUu/b9RhBVspxY8tUgkVx8urmvhG67LRtBh2+9AdLjU/V751sumbKG0KC0G7\nLgkixx/MKdCis5MzN0OOgiOdi/5UDU8IFdWmEesRhMXvWX5Ep3059KQWqeaW\nj012b6eX6Ofz/82VGBO2WRwIhN2PpdyWoRbOqRFvzewPOhB9aIjigKOB1TQ0\nvFVpLZNmq9zaBUt+k1qd26a3Q0BZkC4DATrEUfezr71nRnAYOTkVT2GLCYfA\nj0QL\r\n=Z3DG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCZMyjrTE2APBW0oomzgM7MQ7nqocmp2xp1CLmj8vidzAIgJcmhcAQL2RPTJ/ux8h2/WNfKFMd/b9C9PHwkCYjZmQ4="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.5.5_1570581516306_0.5578246894859538"},"_hasShrinkwrap":false},"0.6.1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.6.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.0.2-222.23","@lwc/engine":"1.0.2-222.23","@lwc/jest-preset":"2.2.0","@lwc/jest-resolver":"2.2.0","@lwc/jest-serializer":"2.2.0","@lwc/jest-transformer":"2.2.0","@lwc/module-resolver":"1.0.2-222.23","@lwc/synthetic-shadow":"1.0.2-222.23","@lwc/wire-service":"1.0.2-222.23","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.3.0","glob":"^7.1.2","jest":"24.8.0","yargs":"^13.0.0"},"devDependencies":{"eslint":"^5.9.0","isbinaryfile":"^3.0.3"},"resolutions":{"js-yaml":"^3.13.1"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in package.json to execute `lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"lwc-jest\",\n        \"test:unit:watch\": \"lwc-jest --watch\",\n        \"test:unit:debug\": \"lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  lwc-jest --coverage  Collect coverage and display in output\n  lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nlwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n- Put a `debugger;` into your code\n- Open `chrome://inspect`\n- Run `lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n```\nlwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n- From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n- If you're prompted for an Environment choose any value.\n- Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeArgs\": [\n        \"--inspect-brk\",\n        \"${workspaceRoot}/node_modules/.bin/jest\",\n        \"--runInBand\"\n      ],\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"port\": 9229\n    }\n  ]\n}\n```\n- Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n- To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    }\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n  @api label\n  // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json. \n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"1c7f2082c39e066359905cf99cc51154ecd353d1","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.6.1","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-FlY3AQXU8w+Er/9bMT1MuMchJ7wVotoTMb75KVegY3uJZ/GFh0/xRWbV0KWYPIDDVY5gto1+mSZlJDuK1Dctbw==","shasum":"9042003b942d54ded6c2f0e2c956fdc91902efd7","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.6.1.tgz","fileCount":180,"unpackedSize":87495,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnga4CRA9TVsSAnZWagAAIk4P/j7vNLrn4fWe1FJB5cqE\nsxYZvTFoJ4lntHB1aT4Q4fxw+kWm+4zDnpvtciGM2H/Z1jt+kpZqilqSZnbN\nIhRG8zj/FkGEOX0RCcpgP0GaRit7L7czPzh4F76Va1L3J9vZNEMz+E1u8/nG\nCozm9+FwAyujABeRAudpad0bxoePYSJ+3Xqo4bjbiIERh2PSfkVnwrpyAgEY\n+dTaxlBMI6+duxUOGl9LXQ5i/Ly0zMVUaq4K1e8V6xswZhUKMtI1PT5vq7BR\n7/EpQ8udmVTuBxi/SXpKCEA16Ytg4dsApO0tHkBAxqjlm+DlH//3sYZ58zHN\nV+9IIZKDklcjGiG6aaBzc6K2PoSHI/hheDxfUUEGw7qVFit6/81tgn/eEvaY\nQdcBNGLB1TcYmnzJAOE5f5BQ8RjwKPekwTArYxUc713j3J+HmU+prVNGKsss\nP+/PpSFUVuPy0zNABFiSLFfkPS09yx+ep480BVsnr9/TfNxSh1CHnDTenLdM\nEKtk7wv2dDc5lLTsn/RfZSp3VFQAA9h8XJwlsWZQUUbbivoPXb6beFMtpmof\nHQ9R14HvdwLt1nS4uszdDLrtGI3wiP3GDAjPu1we6pAtVBwQ6ibG3dVCu1Oo\noPGlbS3Tq51mzj+Z4mhL2ejUM0htuWO6Vbyors2xU3EmWG0sz0D31W92BG+v\nbxeY\r\n=OXei\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBaV51VY39MGXB1Nqp3vrPQUTMjOp+ap69bPMMrBYaWjAiEAnqdG/WkcXT4pdvuJsvpWft7FtLCrhXBEsAb/Igl4ppw="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.6.1_1570637496200_0.4250102214517988"},"_hasShrinkwrap":false},"0.6.2":{"name":"@salesforce/sfdx-lwc-jest","version":"0.6.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git@github.com:salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.0.2-222.23","@lwc/engine":"1.0.2-222.23","@lwc/jest-preset":"2.2.0","@lwc/jest-resolver":"2.2.0","@lwc/jest-serializer":"2.2.0","@lwc/jest-transformer":"2.2.0","@lwc/module-resolver":"1.0.2-222.23","@lwc/synthetic-shadow":"1.0.2-222.23","@lwc/wire-service":"1.0.2-222.23","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.4.2","glob":"^7.1.5","jest":"24.9.0","yargs":"^14.2.0"},"devDependencies":{"eslint":"^6.6.0","isbinaryfile":"^4.0.2"},"resolutions":{"js-yaml":"^3.13.1"},"licenseText":"MIT LICENSE\n\nCopyright (c) 2018, Salesforce.com, Inc.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@salesforce/sfdx-lwc-jest@0.6.2","dist":{"shasum":"cf4c41cc8297f6685cceb1ca7d538c0603169af1","integrity":"sha512-e2NarVr763x+r/qt8mcd4Fw4dQUNitdQ5DJYQ6ht4vyhkxWjHT/Z/P5CHWh63TmvEhCnv9mQrdaThQKoE96Fmg==","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.6.2.tgz","fileCount":273,"unpackedSize":89509,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd29qBCRA9TVsSAnZWagAA4qgP/iUeN4RN6ZCmthzaYJ++\naiUpiXqMuZNwqDKnTVYmE3PTdlrpobGAb6SCPaDhdsZAO/qQa9Kx0B6YijB0\n2s7L6KY/n62P4/dbhjZQY0UC2/ymL1njFSbqfAI+6GcfkiK1D6ht/6mE0wo4\nDsVh2Sy+LdIq9uXoISCoigljo3XhGIFs8/B2dGuBWIX4xvBpQIFrY5DfEfBR\n+ECbdpeISUyRJqM/GdENGol6BtGxDd4J20woDtImJVQL8XpV525rjjs3rp46\nEul66057q8tpWInoLwe/S503u3iqGcWuoFtznRrxT2xi49uT6hv5KHVgGeG6\nCb//VlKfsA3tUBHjYVT96UEFOK0SQLjEovgvcNr7DNnq2SXbGEtcQKwId97T\n2v650DnCZvYyzxxinGdYabqaIiotg+x5yYCOk+sVcWRMHlincC6qQLDEDj7p\nx1R1Cs+xIdUlhsJEAds60qefB60euirXyFlefnNq6u168nZNS0EvusxK9iaU\npRoc7gunxJM/2XeM9P2ZREjIviBju/5Xp1ZGGyUttZci2UzuX98fJ2jcJFsM\n2HYf9MMtScze39/P1rXL7cLTWe/N/GG+QuuvXArx/R6SVcqziuSfum0R90hb\nfCdJDyVFZ2tF2sWXPXkaNku76Zo2txRq1FArT5W17cIbotM4/yO+Lzut1ajd\nY+R+\r\n=9KE2\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHyPPOErgCZw2Fh9z7S4N76tKdbatx6Tjl035ZUdx220AiEAoqZCOiqL/yxC5TXQk1cw22llbv9+VvJ8RDymX6R2ilU="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.6.2_1574689408887_0.9817999499802286"},"_hasShrinkwrap":false},"0.7.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.7.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ --ignore-pattern **/src/lightning-stubs/*","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.1.13-224.4","@lwc/engine":"1.1.13-224.4","@lwc/jest-preset":"4.1.0-224.3","@lwc/jest-resolver":"4.1.0-224.3","@lwc/jest-serializer":"4.1.0-224.3","@lwc/jest-transformer":"4.1.0-224.3","@lwc/module-resolver":"1.1.13-224.4","@lwc/synthetic-shadow":"1.1.13-224.4","@lwc/wire-service":"1.1.13-224.4","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.4.2","glob":"^7.1.5","jest":"24.9.0","yargs":"^14.2.0"},"devDependencies":{"eslint":"^6.6.0","isbinaryfile":"^4.0.2"},"resolutions":{"js-yaml":"^3.13.1"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n- Put a `debugger;` into your code\n- Open `chrome://inspect`\n- Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n- From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n- If you're prompted for an Environment choose any value.\n- Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeArgs\": [\n        \"--inspect-brk\",\n        \"${workspaceRoot}/node_modules/.bin/jest\",\n        \"--runInBand\"\n      ],\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"port\": 9229\n    }\n  ]\n}\n```\n- Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n- To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    }\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n  @api label\n  // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json. \n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"86c719d89f6f8fd90fa5cc07dbdc2846bfac5ca8","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.7.0","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-sCKsaavmJ3+Hm7UdXWcd9781O1T8EFfaZS6Wxf3OdJ1fj51PhPWhOPUqWua7maU2JrIWoZF4KLX4PMf0Qivjpg==","shasum":"93fd3e9ee3c56caeffb1b6bd0c62b205e3f031e3","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.7.0.tgz","fileCount":180,"unpackedSize":89745,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKL6UCRA9TVsSAnZWagAA8BEP/Aqt4JK75wk+KVwjlZTP\n8RIpr4c1abdWiFIM8/AN3cqJOnhZnfv6Yx/abrKRDaoaxx0YGDhYaChgP3AG\nMwgNU+rsgyJHRs8TpPE1F66ajqRKqGDTQqK8be+kV6xMolFnOBXhxUkJ3NcU\ntuJtxERFTZIqwOLTQ/58zlNuJqCAvvuX3hGoOmxIXedlALmGCelFLNvTNpBm\nCfupebBSBSTSgcBQqGM0ephW9aJAHGrl2bbxdQMBp77h+h9IIf7JXOhAuPSB\nIJOF0OPXp2Olm177ggz0uAcof82qkXsz5xdrAZfSag3/mDx1/CWvQCUeDG5F\nlG5exj6u5YnqW3cs9v7Upo+UKY3dbu4yy+7zsyTK8PilXO97gpDJdO2iPKmB\nzp7S42DwpbrMeqmGqR8Pr87781mrp5VJM6PLGoaBp+6+llyTJrtanlBxYG8y\nfAEehla4MxSY68eXn5Df2JkNveugJCx8OUsfthpyTfQtJM31Xd7M3fv7GchE\njHyqLmOynI1FQv3Ny8FFvEY1xAen4fM/Bn0F5Aew4q92WrcGKABNOKAzJe4T\nzzWQoIvGjcUEjq0eiTBUqmR00LkS+F46H90v7ZOdJghIYjl3o+kwWgDY1ak0\n8jAiB+PBPN6CbHTPce1tDwGIPn+NC7jkqDppaw3sqqok5yhYpXMTYY1IV+lw\nzenL\r\n=DZVo\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBzbuFVUnmbEeZLmhDq0h2AkNh9vppTNGzW4cQkjpQwMAiBTGCCNbdfCceSowaX616KpASy10hQOvbbzyfbalSEQLQ=="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.7.0_1579728531986_0.33072594665237887"},"_hasShrinkwrap":false},"0.7.1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.7.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.1.13-224.4","@lwc/engine":"1.1.13-224.4","@lwc/jest-preset":"4.1.0-224.3","@lwc/jest-resolver":"4.1.0-224.3","@lwc/jest-serializer":"4.1.0-224.3","@lwc/jest-transformer":"4.1.0-224.3","@lwc/module-resolver":"1.1.13-224.4","@lwc/synthetic-shadow":"1.1.13-224.4","@lwc/wire-service":"1.1.13-224.4","@salesforce/wire-service-jest-util":"^2.2.5","chalk":"^2.4.2","glob":"^7.1.5","jest":"24.9.0","yargs":"^14.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^6.6.0","husky":"^4.2.3","isbinaryfile":"^4.0.2","lint-staged":"^10.0.8","prettier":"^1.19.1"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"4f5c03efa9cfb9d4e85ed764fa6ef6af18ff3ef2","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.7.1","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-qXLWkdvNfGoEfFa/2u1V09MfyR/9WO2RrkwgbNOuTF6yfqyr2Vzyc6xfbRMOVQY3xgzM38VekFavS+K+TGArBQ==","shasum":"d38cafd0a28fb21cafe71782f08344b1c4cb0b3a","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.7.1.tgz","fileCount":184,"unpackedSize":92371,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeX83fCRA9TVsSAnZWagAAJokQAI52kd0u0+R10KNT1ApX\nVJABdJUUCl4sX2Wf/nqe0XwTa7u36mWNpty8w22Lrwh3AOPWe8EzNo2hL5xe\nCWVA08H6lckC94yZZp5u/92aXq/qkNyyYRzq0AU2yn0jjAwiaOsa+uUL8bgT\nJUScfBy6RLWUCx+53MWAG6qz9pPIDT3r4XbC+31FHVIAOiaR442y0Aw0jcGC\ntwMVD0lgA/qA6XNMH24JImIB7ijVOKMBJOxMt9tkcvbecnt9QrzjJGaho0zR\npyKtpjXgjTD/TPi/83ylz0z6vFrDlfvPxw0u746SzAekSRXzeuQrQWPh4eQ+\nY2XUSrwxs3PUCvJN/hp4OTL1sGx5tHI8E2g9D9edZJ17lU16MSQ8fGS8IbJO\nsd65GKQBa1Kh0izV4B4TjsyEUAu0g30i130amY4rf7mQPiZN74pLEc137SmF\nFH9MoRwCLUwJ0DYD2h+Tx1+LjK0OR0ejkqXOjyO/AeLyLi9J5PZ+3kz8NAXb\nLfQ7S4uNCnOzkofDyKsut8Fb9/KmvjBzT48sLPNRt8pDwstAnVBGsNdLd/5E\nmyVU+RvYjaOS/jjDy1T4mXUx67jEGTnhJVNToNYKmQ4OwM6peU8TpKJ4k3AP\nyBTykRhWhB7qQJNgcOuBQ/G1Y2pHlFaiYX6xgLqjsoOH8wm+1YDVVxai0Jiy\n36B9\r\n=KezX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDKPMSWcpFK3c8YYd1tiGwvHm3d0D2VO9u2FDmqY7ObmAiA5k5PDOwufFLny/Yrtr8KfB328Tr7TMLl2vfDY0RUA0g=="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"philipe.navarro@salesforce.com","name":"rasphilco"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.7.1_1583336927326_0.09659518859781668"},"_hasShrinkwrap":false},"0.8.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.8.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.3.7-226.4","@lwc/engine":"1.3.7-226.4","@lwc/jest-preset":"4.5.2-226.0","@lwc/jest-resolver":"4.5.2-226.0","@lwc/jest-serializer":"4.5.2-226.0","@lwc/jest-transformer":"4.5.2-226.0","@lwc/module-resolver":"1.3.7-226.4","@lwc/synthetic-shadow":"1.3.7-226.4","@lwc/wire-service":"1.3.7-226.4","@salesforce/wire-service-jest-util":"~2.2.5","chalk":"~4.0.0","glob":"~7.1.6","jest":"24.9.0","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^6.8.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.1.7","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"ab1270ef655bdb609353803f5941dff1ef63615b","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.8.0","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-ZHDLL2L2dX1+Fs4vuNcFalTwiFLSEldZfpZDxOiAaUZRVX0wUNuhyH9Y8yDuZV6l2eJlNVU5ENlbSxfK91QAvg==","shasum":"dd0927af88eb07a43392b640217a85af428becc9","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.8.0.tgz","fileCount":184,"unpackedSize":92453,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesg8oCRA9TVsSAnZWagAA8msP/RPO04KOjOxmYozeano6\nhsGUHJFA+c6T3yHOpmp6ouK7I44dSEL5eap2EKIz5HIoC54/tsYo64dSiWQ5\nkCsTAuU3x9ffX4Wkgl0WrpHxcMvwQEsO+dTI0HUrtSCNRH8XF/LttfDjboTt\nTP2AzaI46+RsELpM+sRxRUlkZ5VJZ1h87RxYUkvpNWvj9AGbTPaD7+fyw0FI\nLAMJejP/Khtl0KG1KG9CXtpMFlRBg/6op/nF1lRXjGMCm+Jtj/KMQy8CF4Fc\nT8yjlt7pvSe/W+yWGZrjmfNSXYsS+F9Id6ukHSoqVHI+4UtMVFvA7lqOD7Ui\nImbVUDSebWdVY2AHl/E2BzNb4NYxHImdcaTlgis4xlgbcuROK82Sw2UBJ/1z\n0G5vj2Dr6ILz7myE8BwUvN4YwYhhz3jrDokUIjm+O7Z4K/wmORHQatVMWpJ3\nTf5CGRWUQlOOMJSETetAA1wq/u8mRmOU82BThjRohB+ovulsMHsFAE50HUYr\n3x5WB4IDYgQTBNTOPvgRbLoXqDh2CgeeS74FTI/+iVVN+UmmspOGvNwPKfPM\nlM6YTiVQp5raLTddYDSKbpYbrAriqWITGwHXlyiDBj4b5ilk9NIf+0/DMV88\nvNBRagAcbxU8R9Es5U4uSYLl896lKuAvD3+JYcZVNk+qG/BVdRcS46RKcGLv\nshi1\r\n=VRvn\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD6uEp7Q1Y/TKKEiKHGwLTrJ6cMw+ZRTCY8ia4QERCreQIgVDaSMv7c2Uy017WAbWvkKhLH0qXfut2vF3cEwnrNHcg="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"dpessoa@salesforce.com","name":"dpessoa"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jfeingold@salesforce.com","name":"jbfeingold"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"michaelhoefer@gmail.com","name":"michaelhoefer"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"philipe.navarro@salesforce.com","name":"rasphilco"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"tlohr@salesforce.com","name":"tlohr"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.8.0_1588727591978_0.6713059052614192"},"_hasShrinkwrap":false},"0.9.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.9.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.3.7-226.4","@lwc/engine":"1.3.7-226.4","@lwc/jest-preset":"4.5.2-226.0","@lwc/jest-resolver":"4.5.2-226.0","@lwc/jest-serializer":"4.5.2-226.0","@lwc/jest-transformer":"4.5.2-226.0","@lwc/module-resolver":"1.3.7-226.4","@lwc/synthetic-shadow":"1.3.7-226.4","@lwc/wire-service":"1.3.7-226.4","@salesforce/wire-service-jest-util":"~2.2.5","chalk":"~4.0.0","glob":"~7.1.6","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^6.8.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.1.7","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"1a48791b59e2673326000d80a661ab3a27be4197","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.9.0","_nodeVersion":"12.14.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-Ctz+R6igmu69awsRbP/aRuUoi9sXnmN9daNTKQwX3/LrmlBIdoCsNMFXZQyF9z6OHfzf8wf4aE4j86wAqKkpYA==","shasum":"5c528acc8bf06cdde7451e5cb9a7c73b7be80903","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.9.0.tgz","fileCount":184,"unpackedSize":92453,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe6qR0CRA9TVsSAnZWagAAqqIQAJMrZeswZUAtGcvsXkRT\n/tu2zzwA4wolRT7Koh9cxuCdufNMlhh+PBgOUlEW3BH9mzC0VHlCOLMGbtnv\n11yPFw55993MkJzOCC3JPWHjWuBQf8RYhKpWhnWUMtkI2STcV0KTWt916uYg\nteGKnpZsweB31FxfhBX9geIc75AF7+GTcqdfttiLoY9Dlp/hxmraHaQySOCz\nW5BspTlUhrZI2ljmx5S9fJIM78lUq4X46ckHRL13PPxOGX9OX5i7NJ4zrdQb\nV6KV/VntAXzmXk3G1yPzJP99v9danxo1RSxYqN9XRGk8A+LNz7ZUs8EdKjPN\nh1I5l+7C2D2AFtbLDu4zz2ultqAxqOg6nBJnkPiw6Cx895ARHq5oABMTxTdt\nbRQ9420x3CN6dLq7NS2QeaTyQ8uKOJN3GVYqHSc+hg62B6dX/PtzHaHZI297\nqmZGUslbLfMuKXYKYRZpUEEWOmRzJYmVjG5X58dsOgtuHSPCBv4UlOa1QlA0\nxVqe1NwXTvvss4Ye+v/exKCuCMXMA246c0m0J2zrih5DoE1XeYzJh2sC2D5A\nmSAFgcP6TIZtOv9f8e/M21zQLzXYfBcVADQVqruRyMQvQJBDf742r46V4f05\nK3iLbn0iugZjeo4m1fRclMI4R0G76CKkwyxFG1ReKGkjlHowCIkmSlbY4n6h\neLH8\r\n=dhVH\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAPir5HO7oCwEEcz0IQA4n4H7PvujYTS2s9QeUHu2lvzAiEAiLRHwfnifoknhdmIOb7Cadrp8XAdg/O3za5mT7eHu2k="}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"dpessoa@salesforce.com","name":"dpessoa"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jfeingold@salesforce.com","name":"jbfeingold"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"khawkins@salesforce.com","name":"khawkins"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"michaelhoefer@gmail.com","name":"michaelhoefer"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"philipe.navarro@salesforce.com","name":"rasphilco"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"tlohr@salesforce.com","name":"tlohr"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"apapko","email":"apapko@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.9.0_1592435827993_0.09665423461371847"},"_hasShrinkwrap":false},"0.9.1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.9.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.3.7-226.4","@lwc/engine":"1.3.7-226.4","@lwc/jest-preset":"4.5.2-226.0","@lwc/jest-resolver":"4.5.2-226.0","@lwc/jest-serializer":"4.5.2-226.0","@lwc/jest-transformer":"4.5.2-226.0","@lwc/module-resolver":"1.3.7-226.4","@lwc/synthetic-shadow":"1.3.7-226.4","@lwc/wire-service":"1.3.7-226.4","@salesforce/wire-service-jest-util":"~2.2.5","chalk":"~4.0.0","glob":"~7.1.6","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^6.8.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.1.7","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"2a541c37f069eb3cdc4d29e91fb5e3b0b84630b4","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.9.1","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-PXz+Oehcujoy5hIb2rRCGleLMePsluG5piy1w8zWZWZVva8lTCX7MW11epxgVurpoLBz9JaJYz0sqCSsDjAWnw==","shasum":"8bf2d2b1bc07ec7c57ce1dc9b550fa50cfbc9fd1","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.9.1.tgz","fileCount":185,"unpackedSize":93053,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8QXjCRA9TVsSAnZWagAAAwIP/AjABfrT0adqmLCwgpcx\nf0OrlGLSN9Uv027x288UQ1h4JYtcK2ZN5wjGvH32vwNHrhfLXVguhI+6zlBw\nvfIki5L7bTLn2ykboYdXSZsj9kkn+X5FDpKE/HC9dYOOrC04WW9PbShpTcLE\naw+VCIXJsXJPF+eaS9Iz1FLs3xRT/4UFfEjoegMrZP/1hDoeLkvYEUElVSVP\nVZlU/VlKmkNlqDQ/ou2KE11BKniUVgj1hHUJiLTg7BdR9CEhwrmzumbfcQ0a\n896+n7gL7VQ7NtnilJiJPG3XJ+aFGlNEFdAMkuPtoy/vJwOTH5J3s2CJNurO\nPx3w3pY8yozW8zHU+sZH2xddDbAO5ElyieS1snFa4yUOQ3Um2LdX7HXX2+5O\ncdIk1TcdU1Ejug7lJLJUz1xxpWIhbfkwYfopgV8nMBJdsA5uUHryAFec5NSG\nOPCuSX5CyWIH/qkw+jEvOStKHJyM+urs1OnsLAHofO/1OiAWVrcJ2vyFRcvW\nxsyqIQGzM+PC7vqjwOoOZxtrCks7rAT9PlPXIJP+ps6vQX1t1IK4c2q881ns\nNNuR5UMSSekWDOIgx0i/WVh24Os9ghTX6K0V6SDwPwcKazzoyYqx3kryi3tn\nV60R+KQYHlUMV+RQKRIPFFmLznRyVryi6AVfsoYz6Y6i/pzQ/6LvjUUTvOSM\nXIPC\r\n=l357\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDES0iwTF2YFLyOFR1DEmXLoyi6npkEPIvkYcJEUFmKSQIhAJcWLsspd7QzKbvQjmDR5l41RPEFX1LkxMA6LzudJy3K"}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"dpessoa@salesforce.com","name":"dpessoa"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jfeingold@salesforce.com","name":"jbfeingold"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"khawkins@salesforce.com","name":"khawkins"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"michaelhoefer@gmail.com","name":"michaelhoefer"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"philipe.navarro@salesforce.com","name":"rasphilco"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"tlohr@salesforce.com","name":"tlohr"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"tbliss","email":"tbliss@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.9.1_1592853987055_0.11241859647030372"},"_hasShrinkwrap":false},"0.9.2":{"name":"@salesforce/sfdx-lwc-jest","version":"0.9.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.3.7-226.4","@lwc/engine":"1.3.7-226.4","@lwc/jest-preset":"4.5.2-226.0","@lwc/jest-resolver":"4.5.2-226.0","@lwc/jest-serializer":"4.5.2-226.0","@lwc/jest-transformer":"4.5.2-226.0","@lwc/module-resolver":"1.3.7-226.4","@lwc/synthetic-shadow":"1.3.7-226.4","@lwc/wire-service":"1.3.7-226.4","@salesforce/wire-service-jest-util":"~2.2.5","chalk":"~4.0.0","glob":"~7.1.6","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"f72db0c15a00b3ef6437b1afd4652c68f69a07f7","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.9.2","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-s3Ot5MRnVDDOyEryE8srz3ionNFWm4IUWZcOKTGuP45CGM6r6LJUUxVIsyn4sXakQTuGQrRk+x/tYE9dE1DTEg==","shasum":"8ee15d6d8ee19a0881ec2845cc95a87c74fae72d","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.9.2.tgz","fileCount":185,"unpackedSize":93054,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGIPnCRA9TVsSAnZWagAAsv0P/i2CdIFJpDAwr2Mb4Kyy\neYBGZdMTgkxNL2+67tD2yXspaYU/R3sPuajz87zszuYCjFq3IU8Y7mltSXlD\nNT/O3/Q8Pow2QUMu4hqg4L0EaxvccqfRR6u+rZnRcDuIpKospqnskhE1R+0c\nYiHWt4EtAvf0V+Lii8epclkCHFcgt/x+HxQGzNshvJ8H+KUvM2o0BmX/5AZK\ns3qTZI/oz1KIoz7Ew6n13NU4LA+GoWFRzUV7iBTysnW7diRnEux5tJxUWGvZ\nHLJvgVg8TLkqmM1OLGceX4Ae5+f/TK+6Yl5BC0hl+jhyJ29vLMevMLlUarEa\nJcSOqbF5wdtYI6pVDJSWz/WNFKH7YEVrZTucZ2O8eZc53IbIuAK5UQYfYvHr\nydn1vXC0M6Z8Z9O+Tpq5i2+XzQ/6q02Ay22JkF4iouzbh7d2hMV8HZs1FUrR\ndZNV2UKqvkSUR1Az4BaUoOy0OLXOaoI2/GhoyMlI1IfsSAKH2MgPIFKUUVDf\n34RmJ1lWmc3mdsOEitiSxLle7Icrym+PE1FU4u+27SCkt4aVNeD86DQPMIHb\nP8HbyUAHQpxoOAyITl7QQNke8Lu26Jb7i7dDGuINwuy2pBr/FRmm44dfkhzK\nsuEIyPplGkgZvwO0zWSAh03zSJx5A7kRcweQD2SZ9In5VJ54vVEwjB7/QmXG\n2Ia+\r\n=oYx+\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC3wfthhWzzj2BBukT71sduGHoivgKu/WM+nNJc1nLvzwIhAOdEJFubZSvi2AnwcgfeZBxmG8w42DpNx3jYPMfbmRju"}]},"maintainers":[{"email":"amateurhuman@gmail.com","name":"amateurhuman"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"bmurnane@salesforce.com","name":"brandonm"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"cdias@salesforce.com","name":"cdias"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"davidairborne@gmail.com","name":"davidturissini"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"elfogris@gmail.com","name":"diervo"},{"email":"dpessoa@salesforce.com","name":"dpessoa"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"harshkothari410@gmail.com","name":"harshkothari410"},{"email":"llama@interactivellama.com","name":"interactivellama"},{"email":"jfeingold@salesforce.com","name":"jbfeingold"},{"email":"jgraff@salesforce.com","name":"jgraff"},{"email":"jason.grantham@salesforce.com","name":"jgrantham"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"npm@joshuasimmons.name","name":"joshsimmons"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"khawkins@salesforce.com","name":"khawkins"},{"email":"kris.foster@ucdconnect.ie","name":"kriscfoster"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"marat+npm@salesforce.com","name":"maratto"},{"email":"michaelhoefer@gmail.com","name":"michaelhoefer"},{"email":"npmjs@msenn.com","name":"mpsenn"},{"email":"pallavi.singh@salesforce.com","name":"pallavi.singh"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"philipe.navarro@salesforce.com","name":"rasphilco"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"rsalvador@salesforce.com","name":"rsalvador"},{"email":"j.ward+npm@salesforce.com","name":"salesforce-bot"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"smugakamil@gmail.com","name":"smugakamil"},{"email":"tausif.muzaffar@salesforce.com","name":"tausifm"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"tlohr@salesforce.com","name":"tlohr"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"vineet.sinha@gmail.com","name":"vineet-sinha"}],"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.9.2_1595442150965_0.2174338880574498"},"_hasShrinkwrap":false},"0.10.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.10.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.7.10-228.1","@lwc/engine":"1.7.10-228.1","@lwc/jest-preset":"9.0.0-228.0","@lwc/jest-resolver":"9.0.0-228.0","@lwc/jest-serializer":"9.0.0-228.0","@lwc/jest-transformer":"9.0.0-228.0","@lwc/module-resolver":"1.7.10-228.1","@lwc/synthetic-shadow":"1.7.10-228.1","@lwc/wire-service":"1.7.10-228.1","@salesforce/wire-service-jest-util":"~2.2.5","chalk":"~4.0.0","fast-glob":"^3.2.4","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"fad8185712c8b632ce9494ee9351a089acb7f983","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.10.0","_npmVersion":"6.4.1","_nodeVersion":"13.13.0","_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"dist":{"integrity":"sha512-Sxyzkhxrmciqzvy5FQH3dt1jzH/+84XKKFdpXKYW3/DG3TYSuhlmP1/gG4MGo2BvUmU7A2l3Fg2eZ5VEVYZZQg==","shasum":"67225f046461d90caad0a644b4343e1fff2ce697","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.10.0.tgz","fileCount":185,"unpackedSize":93092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYRcJCRA9TVsSAnZWagAAvOUQAJGa42ZdAyGJ7rwwXk8J\nS87JHSd0hN0R8X1YStRz1AMbisVUJoPYeSFG0UhuKIDjn2h5CTbHY0/lrfvQ\nEe/GAYw8P+HGf4N+tNq6T89e5Dybf8sTQyH0oJi5XIpLwu3crhQnsPtXxIq0\nKcKItfZU0O7Wj8oQQ66rzaiSBAFm7UTlX7k8EVuMaTv0x0UBlcFj+Z+zB7nS\nzIWeYeYXsYJHfiaR1Zptc/TszB89BZZLuC0Qsph59Q/giK0V9qHRAiwHHHJk\nlYqL9pCnpKnC/GdyXYGplJzNmosbQgk3pFc9d0cmw8YYOMwIbTImrC4EErFm\nEa01YDnqY2nsICrRNhZGehP95khBLuAQubgPFMW0iSyrT4AYiHP5lsGVWV8V\nNGPaVuhXRlb/nNiGLEBTDpBd3JL19IIKdU0nqdVgXqnWU5uBQLAHo8OKlFwo\nD8h3rHiNHAvIoo6GuAPhfiUSZ461v2z1Cw1yHOuhr5C4jxNXy/FwAUz+a7Lb\nlJMNacbhITRj00gCzqpiAmT6u75VGQ7PL+5prRql6y0SQXb6BdqQPGTpO1Fw\nhUP/LIPTiUlJnsQKmoEKq8Q2Gu3Tl8j8SQusGvrJ0n0OsbwRYTmWZZzHZPGU\n4kpbuI0eU11ZYEQ0pkeTKyjSkMMkjZBrOEycByAB3qtB9FiygjWr5cHlgiEt\nYGrY\r\n=Bpiq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDGq1fxIerchjDCSJr+9zyZdtuex37Pv4gxRx7pZgHbnwIhAKW+1BucEKJ/UXhKUFDIUNvAkpmKKkvW/XS8lMdnhsTn"}]},"maintainers":[{"name":"maxreality","email":"m@ab3.in"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.10.0_1600198408960_0.7769596759750983"},"_hasShrinkwrap":false},"0.10.1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.10.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.7.10-228.1","@lwc/engine":"1.7.10-228.1","@lwc/jest-preset":"9.0.0-228.0","@lwc/jest-resolver":"9.0.0-228.0","@lwc/jest-serializer":"9.0.0-228.0","@lwc/jest-transformer":"9.0.0-228.0","@lwc/module-resolver":"1.7.10-228.1","@lwc/synthetic-shadow":"1.7.10-228.1","@lwc/wire-service":"1.7.10-228.1","@salesforce/wire-service-jest-util":"~2.4.2","chalk":"~4.0.0","fast-glob":"^3.2.4","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"40e6c95c27dd508743e8f19d5a636a9970c5b9bf","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.10.1","_npmVersion":"6.4.1","_nodeVersion":"13.13.0","_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"dist":{"integrity":"sha512-8nImql/gs+qS04tWUGQxxoicOhGGEBKEReckUzrsnKyiHvlA+FgGGjwWj8kwU2MWq4nt5XLnWpkYuCpAasgT+A==","shasum":"c323bb70aa79624abd59c69aa78ce629902b431c","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.10.1.tgz","fileCount":185,"unpackedSize":93153,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfY8kSCRA9TVsSAnZWagAAHX4QAIlBJ++MwTQxY+oSBUVb\nV7G7aJY5If2cAH9YkyJxdJpD2I1zw6rxCDmtjbqlBgfjW8P4U8sQxXXjQwd5\neQYb3CgpipwC4o2Ur7/QEBiM3V3NbYPVFJukwVTwBRPN0pn+EvvlNItgjSmV\nsv5wpzi3DrwRxKPP16NBQfyhAJAyxz7b3OzvOoh1hv/BoNccIN+ioDkh/uPo\nRIxq5T7VTHxebRHUfsaudA/AJ7Y/D8uvNayx6txSY+raYjGnu0haYQBiTtwY\nmeRtbBvJ6fBIOKR831mTyarQj73dxmUflvDxXLGXyYVnKZxxeJCKXrWhhLZl\n/JlrgrE9N5jnoK6gCvsLr78NB7UnoJ7zi2N5Tlw6BWdUXqYwvQUGDvupaTcQ\nj2QjYx33Yy6bpqHxO/cyGL+KAuXnSfZjOav5bQEErZfwSnkci9vxcFZmUBeP\nEZdiiFwe3PXtF7tmkdxdoAgFzjCgEUG6zUozaEgBQvZsIzk3Zn43UX7dp3Bq\njsCpDkdsWuaszzPJQyoF8YogJ00QNdkVP83/ukB2y4gIqChn4WWD2fOlX/nx\nACNunIHTrs+u67pBrgtkLtD1UvzXDoFVZxAsl1P5x4NMkHsKivoG7vNOh3g8\nq6TocOt/IINhs7NnA3gEijxE9ZK2TrGVAslkqHpOWM1gNrvT6AFg9WKRXvrI\npGDB\r\n=M8Bg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDv7+0tO1rQIZ4slhMeBiyI3deM0i2lB53PARKVLO3ipAiEAvr3McclcfwCxp0udX2ACbKCGMfjAp7wUssr3lFP4cy4="}]},"maintainers":[{"name":"davidrouten","email":"david@routen.io"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.10.1_1600375058060_0.9689671888139768"},"_hasShrinkwrap":false},"0.10.2":{"name":"@salesforce/sfdx-lwc-jest","version":"0.10.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"./bin/sfdx-lwc-jest","sfdx-lwc-jest":"./bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.7.10-228.1","@lwc/engine":"1.7.10-228.1","@lwc/jest-preset":"9.0.0-228.0","@lwc/jest-resolver":"9.0.0-228.0","@lwc/jest-serializer":"9.0.0-228.0","@lwc/jest-transformer":"9.0.0-228.0","@lwc/module-resolver":"1.7.10-228.1","@lwc/synthetic-shadow":"1.7.10-228.1","@lwc/wire-service":"1.7.10-228.1","@salesforce/wire-service-jest-util":"~2.4.2","chalk":"~4.0.0","fast-glob":"^3.2.4","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"09dbb434c614d8532be28675d202ca40f032c794","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.10.2","_npmVersion":"6.4.1","_nodeVersion":"13.13.0","_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"dist":{"integrity":"sha512-D16UMT5r9Vplqu6Ef9sWhpO/ABqSSQb1w+J0gJkm2d5XyLl7gdYKvaR+oSijzZiietRIgAJyIimmfxWxRWQUjw==","shasum":"767bb155357d752b056b7c85d0af70a465ca605d","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.10.2.tgz","fileCount":185,"unpackedSize":93153,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfj3EWCRA9TVsSAnZWagAAANUP/2Qfn3tJmdZkPvlD479t\nPN/BSGVvqKhJHgmh7xb33RV5+0RafQHGjv7UxLGLqDId85eNWI3uAyV4LU+x\nJGokV0zOLDy3/3MiTMED1TSu5NX2Ml43e7zWoelIKs1y6aZbCDPJAf40pfwX\nHFUcP/fbYocJasuHSkHE09zjsTKQn/ih9MoKHPX6MofpppUMp5nOsNWTdyM2\nAgCOePcZvUdMikPoHUtJAv7H82Jl+pbDxZ9j2Y/pBAiUqL6OqZbduePDc9YS\nvM8tgYWpvkS0c+r19pDZfPy3CTuO1XSl774MvCTpXflZCxQx/zvhPuID1qmm\nupFcmCkzIeeiJFI5jJ1e7QLg3T/vgDQE9brr/jG/zFQmtBYWm0c1G4qloYSx\nqj0gs+DEulgsehRbERIy6Rn+y+ZE7FUpHEJEtRneLBH2Vir4dM7PyMtqpAMi\n72KCvZs23JLcLfuWs5JZXf4FP6SqlbOZ/VmKV5cjtxxugRACAGAXa6vKKtDe\nf4VBBOfWCRbTYZ8P+lDgBukhbJ6/hdc/q9Oe5UDgEoRowFfJuCuQSOTA0cZ7\nAG1uIBk0Pq0JjxKewHSolQn5A/64hFSEZe6T0BrfTvMkpbr11NJxHwuRg7oV\nhNIhlJ1W/T+eQoMsvY8FggGnTavhMpE+j95FgZl0HHZ8MFso/bZZR0mn4kPv\nXBnp\r\n=3SGo\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDsT2ecdKhsFwW05yR9tsXBhGDnhaVViX96BCqYt8dXowIhANmFbiGJT/EDw7+aqxbMcrNy5X3DNyIxyVMGTAQC0+fT"}]},"maintainers":[{"name":"tconn","email":"tconn@salesforce.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.10.2_1603236118475_0.26541915037857255"},"_hasShrinkwrap":false},"0.10.3":{"name":"@salesforce/sfdx-lwc-jest","version":"0.10.3","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.9.3-230.1","@lwc/engine":"1.9.3-230.1","@lwc/jest-preset":"9.0.0-230.0","@lwc/jest-resolver":"9.0.0-230.0","@lwc/jest-serializer":"9.0.0-230.0","@lwc/jest-transformer":"9.0.0-230.0","@lwc/module-resolver":"1.9.3-230.1","@lwc/synthetic-shadow":"1.9.3-230.1","@lwc/wire-service":"1.9.3-230.1","@salesforce/wire-service-jest-util":"~2.4.2","chalk":"~4.0.0","fast-glob":"^3.2.4","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. To fix this issue, use the `prerelease` version of this project.\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests\n\nOptions:\n  --version             Show version number                            [boolean]\n  --coverage            Collect coverage and display in output\n                                                      [boolean] [default: false]\n  --updateSnapshot, -u  Re-record every snapshot that fails during a test run\n                                                      [boolean] [default: false]\n  --verbose             Display individual test results with the test suite\n                        hierarchy                     [boolean] [default: false]\n  --watch               Watch files for changes and rerun tests related to\n                        changed files                 [boolean] [default: false]\n  --debug               Run tests in debug mode\n                        (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n  --help                Show help                                      [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` will be directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"d5e625ecf1b626fc6d56434796d3b95c72ffd4a9","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.10.3","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-6HoqjNfaWZX+Z12KJYMHzjUImDUMk8R56GtB5f/6PNfQTpewSWlDVfGkuEjHnm4g8+8dLrIN4tqKs1CEqI160g==","shasum":"24e5f1f2d997693a1cabdbcf784096a592dcf4fe","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.10.3.tgz","fileCount":189,"unpackedSize":94834,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgANgJCRA9TVsSAnZWagAA9jcP/jVwZ4jF3Ofp9yihnpuH\n6WYvWe1p3nniTMw1vpx5+ZXUGNq7YdOnwHXiv8buIbr5lqwl+VpOzg5JT4Z8\niqltHyxrDKjjO+75YsSS0y8sCrbwuNZpROslu4bn5W60U9CUOtj379k7h1pu\n4YaIkFvT9Uj6K2f2vIWFktgdQ5B6WWuzSOEJCKoDBkpUJsHm2beFsJyHgIZW\nmqfyH3Sk8a5X4OeqE59GAVbRnlIdLm+3tUARPOjkKvXYZC2liaATWxz+6ti1\nm6SGH0M8LZYn8zBgXMv0QRCs3sfdF4ZTxNtkJtPyOHr5kmK5lRiiF4ojaQzw\nW0Cl/uhnpFovIe1vtUBhktSD/BF9UjP73JjZoHeDtNT/ak59t4h79PVCjPFS\nHr692qYfsDS9aLwDQiXBwMyL2YRIEWWoP4ipGPu30CeWzwibF+LMhYixuxIc\n5WU28nJDNFup13FuqiW7Bxal0wJWehvOhYkicCv0y1XAtaiFWXV8NNR7LnaR\nAPcJ99EaHddQ2GJeS8HB6CwYPQif+u+3g1Wrq8YXDzo9vAdAy8xdG0613qDk\n8VEBZyYrEhZKdlZckztnYSp0po1/EEiB01nKD3sq7vgC3+yxMgrCY5+IZTw5\nFgUXj8JZf6pWH2hT+AkZUO6nhDuzZ5m4IHoNHp4L2QV0PU8JUrC6umYJBy3z\n5FRb\r\n=XStG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGm42+8rc6pXla/mTePndXoha4n6+KfWZSr66HkWVkZ7AiEAy3hEIKUY3E3shGvsDR/Of/VkVs812d6GQhHPnswlGS4="}]},"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"maintainers":[{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.10.3_1610668040499_0.08013375969346148"},"_hasShrinkwrap":false},"0.11.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.11.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git@github.com:salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.7.10-228.1","@lwc/engine":"1.7.10-228.1","@lwc/jest-preset":"9.0.0-228.0","@lwc/jest-resolver":"9.0.0-228.0","@lwc/jest-serializer":"9.0.0-228.0","@lwc/jest-transformer":"9.0.0-228.0","@lwc/module-resolver":"1.7.10-228.1","@lwc/synthetic-shadow":"1.7.10-228.1","@lwc/wire-service":"1.7.10-228.1","@salesforce/wire-service-jest-util":"~2.4.2","chalk":"~4.1.0","fast-glob":"^3.2.4","jest":"26.6.3","yargs":"~16.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.17.0","husky":"^4.3.7","isbinaryfile":"^4.0.6","lint-staged":"^10.5.3","prettier":"^2.2.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"licenseText":"MIT LICENSE\n\nCopyright (c) 2018, Salesforce.com, Inc.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@salesforce/sfdx-lwc-jest@0.11.0","dist":{"shasum":"9747594e5e214974518d705c4db19e758c8ad242","integrity":"sha512-aMJ2aLLWy82POg8GyHwoq3OLf2BWZC3YC94wxQFDr6WM6eya4+e/Z/UC+ci0sQkeW45Ui78qBm2FRFs+ZsXMhA==","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.11.0.tgz","fileCount":288,"unpackedSize":96924,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEXRnCRA9TVsSAnZWagAA0nIP/3r1aWNdlFYO7MTfrcF1\nWAZESMDnvCC73hiFA6l6ItfV9sQhL+mLobysxZddPegTrJFIkq50UJ2hcl0t\nU3lTlZ/gLBnXy6/z4n/BmOD1c/w4pnyDZDagN30Oi93PcbGtg9QZlgU3otm/\nSR4oSzLIyUop82sbnXLoAEr95jWALxKOB6uD+OfX7liyxsYmeccojHE03PZZ\neNBenYTDt1mXQdJCpZZkRw0pmSAeqo9FEmYrL6K30L+bSBR/MzoGjl8/f0oc\n0yZJFDhU5UgPmvA8Ye0eHQwRBUwSBlRCvC3HoaJ/Cty0SOJW6T3zNyIl/mdz\nos/qjsK0U6BGGGF8kQl/0nSTpCHCAm1eJsN+U2KcdapRAhlRhH0p/BKRR4K3\nWJx4l0bqYvCGfYWonC205yWrrYzswRhtryXd7mKCJcNzvo2lYTzJd4nBDluH\nW66NayqK8kpO80Ps3+ImHP1nD6T3SpYUt/qRnX+7hSbQIEfhHo4Xd2koZfbW\nlRO4RidcEReqOSZGBAuhIWVg7jV0tE5gRA0ODD+GYTo34d7PLgqo7xNvIxnc\nKApEs81IVI0pO4zfHmLWXEkzM0IVoVmxJqRyboj6iqFb/sgUr3R98kuGE+b9\nf2Csxjlyqjt+Q71AuGwxCaYv8yrlA9WrLACV9BYJd18OkAvyaB/Znuzu2FKd\nPel7\r\n=UicG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEUGr5rmzVMYj3FJBKwKXx0DyBa89DvoUvDM38qGIwRnAiEAy7i25GFeqxoBHubt+hWlhExmNBtTYsoGbxzZvdEgKbs="}]},"_npmUser":{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},"directories":{},"maintainers":[{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.11.0_1611756647274_0.17788215800093332"},"_hasShrinkwrap":false},"0.10.4":{"name":"@salesforce/sfdx-lwc-jest","version":"0.10.4","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git@github.com:salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/","format":"prettier --write '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.9.3-230.1","@lwc/engine":"1.9.3-230.1","@lwc/jest-preset":"9.0.0-230.0","@lwc/jest-resolver":"9.0.0-230.0","@lwc/jest-serializer":"9.0.0-230.0","@lwc/jest-transformer":"9.0.0-230.0","@lwc/module-resolver":"1.9.3-230.1","@lwc/synthetic-shadow":"1.9.3-230.1","@lwc/wire-service":"1.9.3-230.1","@salesforce/wire-service-jest-util":"~2.4.2","chalk":"~4.0.0","fast-glob":"^3.2.4","jest":"25.5.4","yargs":"~15.3.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.2.0","husky":"^4.2.5","isbinaryfile":"^4.0.6","lint-staged":"^10.2.10","prettier":"^2.0.5"},"resolutions":{"js-yaml":"^3.13.1"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"licenseText":"MIT LICENSE\n\nCopyright (c) 2018, Salesforce.com, Inc.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@salesforce/sfdx-lwc-jest@0.10.4","dist":{"shasum":"b524317fed3f5ba729932ccc0de10c5e3239fe9c","integrity":"sha512-jvPylJ3wkXaDmTMYGJpIbf6R5O1Ow9k8Ft621mzBUZxfTtEc+TA+a6IXlKxm/HIRV0GJSUbSb5Wm7hWvwVhzHg==","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.10.4.tgz","fileCount":288,"unpackedSize":96899,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEXU5CRA9TVsSAnZWagAABGUQAIv3wEtFbYZCxDJqCmgz\nli8U/RuwoUB4YMJjz5Dta7mNnhAKvDTxkwQuV1t1aTysEnOTZxsAzfftwyAi\nGfAHMuf6Q3bCnUdy/mXIm3mJkdm9zxtA4dGo/SDoU6Jq8/ywLSF5Pwv7vqka\nzkELTclb50ZaugdKFurSydk7ogMUX0dfmDFJnUllrgSTLvc9J5FtaXARNS7E\nfvbuUOpaUCG7Poh8NLMQvhTup0QueyDeo58o6f4gs/0CxW7ijIQyjxyp9WZX\nd7B+orGaLuNUF9YW+tmnyHdbjz3quuIoLJTCycwc6eEHyoG74DapLkfKjb7M\nDtZnbwAJD6Y3yTY4Nkc6Uvk/ma24HdcqZoyeyRPAtGfZGMwMxW2YIYju09nL\n0MlY2qndg4MeLIZMOmKVLHQ0aoMnbD65tn5Q1sRimnXvordEKAk0qDTL7MI/\n24+mcJyxIJY516qXFx/Z7IVxl7CxMVkyi0jZi5QfXfJSMKR4KhGk9ieh98jE\nHIjn6TO03ak/LgcKwKqZKuXI2sKf+xD29eNTKHEwbUiZispTwe/LWOUzUbbl\n1NtrwxAb/OFG0NuzS0A6sbH63KkS6klZhxyhMGkileITQ9yk0XaB0cWdHSqA\nA3eW814BXI42GvP/plo6F8LJ9lhU8xQUGXfC9kF/8E3AJ7R8bWl/56DTujuP\n45Co\r\n=henZ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCLiuudE+luOkFEB2tbB5qvsiz8AHv0wCjTxMubUuZO1wIhAKYxAEsRAQLPy7MNjt2tSd57t/usz3DhcQ+6jk3KCAjH"}]},"_npmUser":{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},"directories":{},"maintainers":[{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.10.4_1611756857049_0.2872665966513359"},"_hasShrinkwrap":false},"0.12.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.6","@lwc/engine":"1.17.6","@lwc/jest-preset":"10.0.0","@lwc/jest-resolver":"10.0.0","@lwc/jest-serializer":"10.0.0","@lwc/jest-transformer":"10.0.0","@lwc/module-resolver":"1.17.6","@lwc/synthetic-shadow":"1.17.6","@lwc/wire-service":"1.17.6","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.0","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~16.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.22.0","husky":"^5.2.0","isbinaryfile":"^4.0.6","lint-staged":"^10.5.4","prettier":"^2.2.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n### Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. Given the following template, `helloWorld.html`, we want to test:\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick={doSomething}></lightning-button>\n    <foo-fancy-button onclick={doSomethingElse}></foo-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button component`. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\n```js\nimport {\n    registerTestWireAdapter,\n    registerLdsTestWireAdapter,\n    registerApexTestWireAdapter,\n} from '@salesforce/sfdx-lwc-jest';\n```\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"fb9c13c527ec98966bc29652dd5ee9dfb58e00ea","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.0","_nodeVersion":"14.15.4","_npmVersion":"6.14.10","dist":{"integrity":"sha512-3DMkcpTk3tlfIQyRHq5vj6UYsvIxc03fjwHhazWXX1YsbIoYd3SLOIhwSZUl5EvsGTK6jIvhlysT7JZW/NtSaw==","shasum":"0989a55074f5a26a2a88b1d8b1e88e15960823b0","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.0.tgz","fileCount":187,"unpackedSize":95745,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW3qLCRA9TVsSAnZWagAAnLwP/1FPTmiLp04XROvSTIDh\n6VZ7HBa0ulQozySLgiUBsty1wDBG/gGEVXFn2Rv4aZkPPBAl38VyV+u/XohW\nsdNh199SpnVzP36K3+l7AeHOOFYUbQOYgRJr/99jZOwjxrtH067Xxsp9cAhU\nxiZCZGc2Ou+riWVHqsw5vspyORhzGoD66M4wvTsQjFnGSl/ezT8HOJ+tbZo+\noKN2PwL0FGIe8jzigPKSWiR1yQeebHxDPTHSptgUinoQqjcAb0jDntZxeERB\npuXcyQgGTr0u/e8aENH7t0X96wWGGpiXsqX8VU1rB43qOUeN2BYM0Xqc25uK\nY8M/onR7Fp4MiSqDMYsDYBHrBtLgpZLt47UCvWtiGpn7Lr1zFXBGLUzasmKv\nhCwOi2lngvV9nT07fodLJTRmSPP6TyfzFmMXpBCBImQ7KQYW0ODRzPerUyIe\nZfy65RNhvcrg+aSD0vYEkzNFLFLFGkhlJ0WGGr9ypCvbGx2TYLYdEAzoZnYC\nr0KQ9LiFa+gjtVdRroahJt4RtA/j5qNuGy5u7w7RxCfEcoBY41kiFd/4ayni\naBEVANRmkZL9HRiHU0cflrUsAx550gczlfHz7MfuUsjPvFnpZ/9R+8LsKuzy\naNkgA1LDWDLW0hNfEpZaAkbziqC+1LGVNTfTfjIlZXsDQ7mi1GsFdlhHxE2W\n/MMp\r\n=iBkI\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHp2kPr8yj+E+ssWVUJAAuqaanb6K7FdBoLxih+mkk/8AiEAgfcaP13qDzEPXS2nYshfNl94qY3vG0HVgQBG3SNxQJA="}]},"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"maintainers":[{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.0_1616607883029_0.10226363861629473"},"_hasShrinkwrap":false},"0.12.1":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.6","@lwc/engine":"1.17.6","@lwc/jest-preset":"10.0.0","@lwc/jest-resolver":"10.0.0","@lwc/jest-serializer":"10.0.0","@lwc/jest-transformer":"10.0.0","@lwc/module-resolver":"1.17.6","@lwc/synthetic-shadow":"1.17.6","@lwc/wire-service":"1.17.6","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.0","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~16.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.22.0","husky":"^5.2.0","isbinaryfile":"^4.0.6","lint-staged":"^10.5.4","prettier":"^2.2.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n### Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug Mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch Mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. We want to test the following template, `helloWorld.html`.\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick=\"{doSomething}\"></lightning-button>\n    <foo-fancy-button onclick=\"{doSomethingElse}\"></foo-fancy-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button` component. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis config tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"631cdef6fc3e5f75a5baf24b687a881b6b72f577","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.1","_nodeVersion":"14.15.4","_npmVersion":"6.14.10","dist":{"integrity":"sha512-ltg4JBjQlT3OB9v6n42AeyHWOr9RcWwXBMa6LEUNhtEt879HSa3tEOgZCamT3vOpgR0lS4s9i+l8t5R69BW/Bw==","shasum":"56e436cfb818d009bffa7c68dcde8fb5dd279b48","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.1.tgz","fileCount":192,"unpackedSize":99376,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgYgHaCRA9TVsSAnZWagAABkoP/AhkCZG991fwZE3oij6K\nooP7J93Ur3D9X385U2JjRK/vEPoWs/mrMXymzKC6zSHB2zFbkon8eoXIt/ZD\n+Vj8/6qMaIPuDf6gvjRePhLx8Ns+4xfnARv0ESrBUQbGVFA7AJz3N+gqxfK6\n5Zx4BvYiTgOnWahUX0JmgGk0P0cdWNaV97o6GcgWB7/kOcKFX3nykn/skyqh\nvNVLEbCpTzKCH0MWk5O7Af0AMhlmbM+fmDEMRuIbVvuaTeRjP3nkKUlpAhlz\n5fnF9aAHOTXkNfFnYLxSPZgLixmJ7pgsqx4vZlsVA9P6LgJEJHL7+fREPB4z\nli82xSAg5e1PSeitmXYruiArdHYr8JtRz2FMeKJ22oIQKvTifcuuj/GscvOv\nBN1i7GsaunVLdxO8m6jqEcAbwtCsRTmQzoDEwRZEFJR9YpuQkdMjxD+cNEcP\nhCYB2I8mLWj+9Y+di1vwrAr8OZsPAocdN0W1ASsP6u53AHzU2RrPJX2jy6t1\nG9tMkbOD6IpuxEzwfjFYyWSgjoyY3/DCJ9hp1hxvgq9Cax0Bz13h7qdpOcww\nDn/1b23XXPkZIPpiHmN8Pfn0JnHtxRkIgebY/ucfowyexNgIX6ywaRIUsppq\nkncC307SJXLSRsn6D3YmZ0fz0emywoZfYBVC8/t9j4GAD2WP+XR/k51GA3yM\nbmBe\r\n=y2ly\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGHqo9a0NZF8Xk64WCRbdTZiQKy4hc61NgzMhYwYsLaiAiBsw9Fme9HBDwSsmseo4UbAVRPUWQ8uf/ASrNHOl7O20g=="}]},"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"maintainers":[{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.1_1617035737420_0.24095849434955507"},"_hasShrinkwrap":false},"0.12.2":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.6","@lwc/engine":"1.17.6","@lwc/jest-preset":"10.0.0","@lwc/jest-resolver":"10.0.0","@lwc/jest-serializer":"10.0.0","@lwc/jest-transformer":"10.0.0","@lwc/module-resolver":"1.17.6","@lwc/synthetic-shadow":"1.17.6","@lwc/wire-service":"1.17.6","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.0","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~16.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.22.0","husky":"^5.2.0","isbinaryfile":"^4.0.6","lint-staged":"^10.5.4","prettier":"^2.2.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"1c34fe19ba203588d0fc81f66e631206ab59c1bf","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.2","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-0rW+95W3fDqHOXW2Ox4CMQmVDOikOQGhRmPfZwFRE41tQOPfqrTToQUlmKgFfv9TYD+CCLOuA+oJc17A/+gu0Q==","shasum":"7feb96ec92be442f4bbedcbe80b7c7a90a73ac1a","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.2.tgz","fileCount":194,"unpackedSize":106356,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgZQJQCRA9TVsSAnZWagAAtf8P/0AKSQZuEUCJ6gjg0Qhy\nHg5xNe96IWN4yFxSF0TrM1hpGybdOva4KKefITBBTt/2w0Qd6xqEIDSG/yL0\n2y9rkGk4F2jGvg37B64acTg6/IOPmH6Z59SqeZUAr3FMXYJhtb5hXz2iR16l\n0YJGJEGOJ2xdHVFN7pV+PmZEBJTR0gRkVUYFFy+bAGi3gD7enopFL8fnnCF+\naEx7czze4ZcWozajjXd7Ili7N5hbyg5WAHCwMI/PNIZOVIUJNPf/9/pNZ5eq\njthqHnZKjVvIlrbPSOWVaPvqKOs+RRQnFA/rdwNYO8RFaYKnPmb/9Ao94QZd\nkHnjAJL7TY6CEG/L/UIDKJhpkYhI+4dFHRm6brz5l3c5Es6C1p341lTo9019\nC0PuDvbvl+arZpnMt68LC/de9q5Ho37vQi9yJQji81OWviradnEf4ylZOvOK\n/mpueCmPsz/p/53xpPaIbIL8tGZymaC+O7aq7T+Iz7szOdaTpcqBsX4Ixgvt\ndULXX/cbdTf28uoMDbklIawnAbkDsAP15MuGj/pgRD/adx/ELg2TPO307VVF\nOyVSoQdz4J4PlxbGesDn6xyFkL70XsVIzo9IU1lnRoKFJUAl42ff8cudNVff\nYLZ/JyscfmegkoFSvisgF9WH6e0jZYfq8mqgq5QpWki0Q+vmjUdXCTL8Lq3R\nQyJd\r\n=1oYm\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEYIVjHdxIJzWBPqs/4AE2sun4oX1tpeolt4DuL3anW+AiEAwV8YRZCGHXYgFKCSRt54NHzTu+pTF2H7WByiM1T1c0I="}]},"_npmUser":{"name":"jodarove","email":"jodarove@gmail.com"},"directories":{},"maintainers":[{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.2_1617232464178_0.7862674343849008"},"_hasShrinkwrap":false},"0.12.3":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.3","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.6","@lwc/engine":"1.17.6","@lwc/jest-preset":"10.0.0","@lwc/jest-resolver":"10.0.0","@lwc/jest-serializer":"10.0.0","@lwc/jest-transformer":"10.0.0","@lwc/module-resolver":"1.17.6","@lwc/synthetic-shadow":"1.17.6","@lwc/wire-service":"1.17.6","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.0","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~16.2.0"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.22.0","husky":"^5.2.0","isbinaryfile":"^4.0.6","lint-staged":"^10.5.4","prettier":"^2.2.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n### Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug Mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch Mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. We want to test the following template, `helloWorld.html`.\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick=\"{doSomething}\"></lightning-button>\n    <foo-fancy-button onclick=\"{doSomethingElse}\"></foo-fancy-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button` component. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis config tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"c7867b22e06c29292c392e262d2b42c3f6de40e1","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.3","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-83eNOQM1rm6aSzu/N/PIOe6d7Jh6gUUIZYLIyRPhFZiQvl3X8uC2dq7kK470ZkdUIpjSSiJ4eK2xzQba9LQigA==","shasum":"af81f903c60973acbdbaa237ba9cc9fa08cb9761","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.3.tgz","fileCount":194,"unpackedSize":106363,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdIWkCRA9TVsSAnZWagAATVsP/3L11HiFNZBklZxM5vjV\nGQN23dZ4WVn38QgJNyxkyFDGhb8kdQLQF/PtsbfDO05W20s70kaMWpwPsQBv\nbkjFY9qK0z3EsOGVCskHQLTuWDLOpmDZZtDPtMuxLj3zpnAKLYSlmJOrRAKa\nzcc5xgOg72DxG36xLYF7ikFaSKQKM/eriOUY08bxwJxs+QrQm9RUKcy82RfX\nrkma6wYgs7wH/bmDzSzxa8ob2vieMfviWjt1F+mTAJmo5tIL0bkY4/EuSDLF\nA0Y8ME4lkkX2aBSziRrIoCUOSg7ainA9KCKdOIOG//oOND+NcxmNdqTGH/QH\nbWma1a5Fc/nJLsOD8Lk6gW6WGDY56gw2cWZO6UIwaO2Ponm7wHvHVlIs9Zea\nkilQbqbwi4hUuHyowN0uGqgbQqB1xvnkAndpywvZQYdZFCGP/HrfPYelqYcN\nJxtmSw1qW5nCpOV86+iWn0bTFVaY+KnqN8LnoInsfseCK/4NSZf/T6qA4nSR\nXRTjLcfqGxgRgbx2we9MqRqFYdtAPfWPUvMj3RJBufZwKGgWfsV1uGEUYAFJ\nBcahjY1xgAXuBjXVWGNx03Ti85CGOm22KCJ655QBP5kfC6sfKfGYcPhI43w4\ndFuuFUDX7+J9Q6DOAwM9T41NSBEk4KJjigyiArLeM0zV7SORUlFtb8B4cU10\n7as+\r\n=KCC3\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFmvobWtBYC/Q4n8C0p9S2tWbGqztuZ0A9GFs1a9l2tBAiEArbsyEaRPqcoBiGAkz46dkVEAzDCjCyr3nb5QJFNfolc="}]},"_npmUser":{"name":"jodarove","email":"jodarove@gmail.com"},"directories":{},"maintainers":[{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"npmjs@msenn.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"joshsimmons","email":"npm@joshuasimmons.name"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.3_1618249124193_0.9870445978603155"},"_hasShrinkwrap":false},"0.12.4":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.4","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.9","@lwc/engine":"1.17.9","@lwc/jest-preset":"10.0.2","@lwc/jest-resolver":"10.0.2","@lwc/jest-serializer":"10.0.2","@lwc/jest-transformer":"10.0.2","@lwc/module-resolver":"1.17.9","@lwc/synthetic-shadow":"1.17.9","@lwc/wire-service":"1.17.9","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.1","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.28.0","husky":"^5.2.0","isbinaryfile":"^4.0.8","lint-staged":"^10.5.4","prettier":"^2.3.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"b4e79851e0ca94c8792f53b94d2b8d8c4062f439","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.4","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-qN1KdL2c0aDCHMl67lBogyoEcxuiU+rZTUQv/1rb46JzcMmRsl1vv7FTYKuGlEqDH1ahDItP/fMyvlJTLLtfYA==","shasum":"74923a10c99f20238839a1cbdfc18d33b8c06aed","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.4.tgz","fileCount":187,"unpackedSize":95745,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgy2pnCRA9TVsSAnZWagAAIq0P/iqOt1Aq2FPyu9fAmWCm\nAtGLOrZj2of0ceW9AtkufoBZB3110lFFOqGTM8cH/oKqx1cdahxurOZCueoF\nXgh6E3Zc1+yu4CBPxEaYGtw/ebUkQZZyJ4fDjjFcG787kX28rvx+HAB6a1Pu\n+1grN8o3A0I9iDcuDit+OkzT6+cREsUYnenBnRG2UedEeM5JPx+7fqCjwGKK\n15zogiRqPuVGZ5cY5SBCu0Jy5yJpOZ1yh54pW8hwFXaLwsdC4eN6hsUMaJsM\nMJtxtAeucmjnLyjRlCTiH6DC4Jr0QtF/FTVKlkojCZJrR1PHRFgJMkTEvw6S\nR1LYBBpIaujOgkJXlIh4meHdkiu20i3/AIqmrPjGpnCKyh9EBGvkFFLi7xpw\n5bDDY1KZ7YEJsS5jN0HsMgN96dA1cfdNjnMfEZbYj9ES6S/+ZX+whKQqOCfC\nLvcMkXFr92HLOx369ymB1zMztYi3oxKSm8hBQm2kPdKjcxlIWl1S0tWnbYvM\n/kOdCvsHR5jWEgeqbu3w2ZiW4PSbvO4uIgl/QCBJxuLUeoO3YOzqYj07aRMq\n2sdrllPiHRGo2axV436sKpl42rC0c/xiywjodg7acqg93Rl5ub41HLEsHEau\nMJ+ueIcKPtpiB2AYfgjEydEMS+9pAXTjkBio2UwlqfH56arZTl194Dx74pgf\nd1Nr\r\n=UDUD\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCA8YCP+90GXS+YeyVHS5Ho4+PY3i10Z+zcsNjQ1IBdTQIhAJu5XR8WDMMhXpH9lY2a42YGXMXX5PsQY4GOWJSlR81e"}]},"_npmUser":{"name":"ekashida","email":"ekashida@gmail.com"},"directories":{},"maintainers":[{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.4_1623943783150_0.20915329677780203"},"_hasShrinkwrap":false},"0.12.5":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.5","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.9","@lwc/engine":"1.17.9","@lwc/jest-preset":"10.0.2","@lwc/jest-resolver":"10.0.2","@lwc/jest-serializer":"10.0.2","@lwc/jest-transformer":"10.0.2","@lwc/module-resolver":"1.17.9","@lwc/synthetic-shadow":"1.17.9","@lwc/wire-service":"1.17.9","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.1","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.28.0","husky":"^5.2.0","isbinaryfile":"^4.0.8","lint-staged":"^10.5.4","prettier":"^2.3.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"31d6bf2e6b42e0c21c4b758246181933b692447f","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.5","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-avtcNnSEASpUMMYONxi1qOEo/Bfr3iYKyd4VfuCHh08Keex4MvdA4i/541mcbLaDVPIPNEURUcTQcQ7Jhn3jOA==","shasum":"5ccda9e1c3db873b643b89c4c2a85eb584d239ff","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.5.tgz","fileCount":193,"unpackedSize":100414,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzEk8CRA9TVsSAnZWagAAlqIP/1hTkZBbTiq5h8fCDCTz\nrvdPAcnWMTsH+iQUwi8D4T5zgfpVXI0sT4o5U8BpuEuRl8edZr3FYZKW8Tu0\nMh+0PY/SYO5fbnRATGxbZdznmkwdm+QGBQ+zbF7hBdHqT4dP6iAKSwPXoYhd\nPlsjGTwo8u8XHKiRUuNpFi11yTSNIWb/0O3FwEKoytMGcKkQP5a98Putl1CI\n3Vw8SAxIfpHpOrTIT64bE1eOuZ2ZJhBg/AN+dCR0aUJ241r3Pm6iBIvNgJQJ\nx7n7imOnRd68zbHgZid/ASxJOBsWe8n+YcG1ckkt3i3LxQI9UpJqBv0YpM3x\nBs1g21Em7XAarbIoAk9hacX18nxeuY9JtMkWHfd4rewKlO8+PgyFiG1HIbsh\nFzRUkFKAnirEx+YF0Rplrtl9YZUEwvOxyyCTRxis9UpWh8YzlNj12DFhnEFX\nW8D1YjWEJVdFwJcB4ayn9i7BKusXJ70A+Fq1VnFDN+J5aVNm60tTYdJ41sIf\nyWVTsasYOT+aIjYJiKNMGjb6cV8Kwgvf7FA78NKdX8Ha48QbsBCYtQtJW7hJ\nDo/+q+MnA1IFCzEUoHi5yis9hRcgdZdeLuLWF5wmLHReLL8keSotuXsdobkY\nA3QbJkloF7sOkNmRQslwytR6aiK75h9mWPPS/qao30hOOTnyADE8nB2mnFy/\nnsvK\r\n=fa13\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDXNjCm7JJbnJe1R7CwryOumryoBh28KqkINJ8YHpyQYQIhALUu96aP5JSOVEFxNlfEKAD3jTuSKbLAlGhRWe1UBt/2"}]},"_npmUser":{"name":"ekashida","email":"ekashida@gmail.com"},"directories":{},"maintainers":[{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.5_1624000828491_0.366524847201924"},"_hasShrinkwrap":false},"0.13.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.13.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"2.2.3","@lwc/engine-dom":"2.2.3","@lwc/jest-preset":"11.0.1","@lwc/jest-resolver":"11.0.1","@lwc/jest-serializer":"11.0.1","@lwc/jest-transformer":"11.0.1","@lwc/module-resolver":"2.2.3","@lwc/synthetic-shadow":"2.2.3","@lwc/wire-service":"2.2.3","@salesforce/wire-service-jest-util":"4.0.0","chalk":"~4.1.1","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.28.0","husky":"^5.2.0","isbinaryfile":"^4.0.8","lint-staged":"^10.5.4","prettier":"^2.3.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"ab3d16a9386088d0a6c49c9d0fe25b018b4fd5d7","_id":"@salesforce/sfdx-lwc-jest@0.13.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-95nHJsxfVERvF9wuOk50HOVOOlJieyMpfclGhIj05Xe0lXmQ8pVtC+iVoAAvT2Ek5NqOc44lSbRVWtcTB87WKw==","shasum":"218ff027ac7726dfa976c9ea13988fba4d600e3a","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.13.0.tgz","fileCount":193,"unpackedSize":100625,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzEoYCRA9TVsSAnZWagAAAHcP/0AT6tvFUI9itEQf8ARY\nig7QMjufUxiLfEC9lbGWHvGozjDsQIfvDl7Ok0xkPEaFSAD8KTVNFjG3E8ZC\nQ203AR9rQnevjIDrl2yhEF8CsV7Gvsb7EbgJTpdxce6dM7/+RJ8UylJFWPrp\nsKbG3QzxQ80FFJ1GPPcnde/eWH4At0NjMF/mKdmmlvejnkPDpkh1lJNxzUDz\nRKrgfSDCFzMdnklWNBwBkVpwgNsnLRw97HQZVCB7R1ZshiTmG8cAK2DhyyiR\nc9/QfgYZx25Ipi2Nalt+hSxk4kWoZuaMPVPWAZwD8hbCj+mi7OYTykyF2zsB\njpxwklrL75AzmYh45891pbWovd9RwYIdgrbQsE/tkx+sHSAebeeENg0c0oiB\nKuFtCfik7W0VSxVKSO8oJ6X9An7rpEn09K04A8ONCx2oZol9kzMjGu07j0Rd\nJhrKTsLIedzBsi9SsY0Jrz7UT0BJWQZ/aZ1Fy55Ey400CnK99DBXRZrtg/nk\nlB93/Drh5acGQbOxM7DgVPAWzpyH5/TkBkRrKAOQqQ1/igfGBdvqAe76v8dc\nrgzm813WRvmT9KfrMxhwD8c5Sp2iQriTXITw3a20zgVTDEXXTxlOI1Mj3gGE\npEkNbe5YzHeJSP7J4+owuPOFOtRSGiAgzeHYHrfKaJj0a/wwiQJ1ga8IYlCC\nCEQE\r\n=gMun\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFofQsQ4R3gSk23/IKpll8XSXGs4ddlDvQ/jaPUsrxkBAiEAz/7uuMw3CMbBn1x4dRkLy/qdSDb6565wOw8hNjVHbVY="}]},"_npmUser":{"name":"ekashida","email":"ekashida@gmail.com"},"directories":{},"maintainers":[{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"amateurhuman","email":"amateurhuman@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.13.0_1624001047554_0.8848992618447507"},"_hasShrinkwrap":false},"0.12.6":{"name":"@salesforce/sfdx-lwc-jest","version":"0.12.6","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+ssh://git@github.com/salesforce/sfdx-lwc-jest.git"},"bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"1.17.9","@lwc/engine":"1.17.9","@lwc/jest-preset":"10.0.2","@lwc/jest-resolver":"10.0.2","@lwc/jest-serializer":"10.0.2","@lwc/jest-transformer":"10.0.2","@lwc/module-resolver":"1.17.9","@lwc/synthetic-shadow":"1.17.9","@lwc/wire-service":"1.17.9","@salesforce/wire-service-jest-util":"~3.0.0","chalk":"~4.1.1","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.28.0","husky":"^5.2.0","isbinaryfile":"^4.0.8","lint-staged":"^10.5.4","prettier":"^2.3.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"43135f2c64ee2f84196236769a2de457b61e3a0d","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","_id":"@salesforce/sfdx-lwc-jest@0.12.6","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-H1B4eyRLJ2Ukk5dGZh2/W0S0V2IVCbYCCX60RDknhH2lfe0BHRkB3+9jfC5+UDEYh/Mp1b82OGWLWPSG80K06w==","shasum":"5091020251334e65d11ea5ca130217d0c37b5743","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.12.6.tgz","fileCount":193,"unpackedSize":105723,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3KV3CRA9TVsSAnZWagAACo8P/i/m8VjwkFuQkx8ZtHdm\n6zJmFMul4GAK2/1nJ0B5zVZ2dvzN9Ofe13cgMDkFNNDkjaZwo6/jYThsUm43\nIlnL+gfSXLeuL7ilSmKnK8AaeoPrKdgjqKdAZBdbPvaCOdlcOQWYIWNWatJA\n2fPR8U2WnvWMUYrW3TIdLAkt3V/P0n4tjZEdKOz+aiZuvbh8Np76cHVEJQDD\n/TsyKp7N3w6rWE1iYE3kK29LX6LdVI2QCIjyEQzyQ4ZnePLRf7d2R+StEgki\n7pgMnLCmjJ1RkEk8rxOOJiVPjvNIn0+czjrO7XYw2NIRemfQq5S7d2oJScq+\n1BKJl9K1eRd471lCuyVXmNQGvhhnwhlbYPQdOQQ2a4idS8C+edBN859+1gFT\n6ROR41AWGIZ9iuOC2qHhEia71EydgialyYr3Cbu4xd6uUY73SM2GSCGrZTFt\ncaSf8oPWoyZBJzetbqBY0aTP0WTdMVAH+pt/CWmr6T8aWMX+VdPPySwJQXET\nJhoZMjzQQYyZBCPwTNQpGkdfuvyzEB7/gWOSvHtTHmaE4sO1xuEXo6wX8LvW\nuZYUGYrRmaBxdqIkfIqXbE86FlxRW82FrSqUBl5DbiRjGBeKt2NXlnoH1/bT\nk5QzRUQQpjOXQCCO0l8+qDfGEt7SlT7CzZsfueyBt9Gw3n4y1quwjoz8sT1g\nhfzZ\r\n=Q+mh\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDsN7A+NuDCJV8sJbmwJ0x+UXxetkbibtZp4wjUdMY2ZQIgcbAMwbtkLro2KsZwoyMZo88pBGyaVUdVakxpDFYA+Rk="}]},"_npmUser":{"name":"jodarove","email":"jodarove@gmail.com"},"directories":{},"maintainers":[{"name":"svanteddu","email":"svanteddu@salesforce.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.12.6_1625073014790_0.29336802956322194"},"_hasShrinkwrap":false},"0.14.0":{"name":"@salesforce/sfdx-lwc-jest","version":"0.14.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"2.2.3","@lwc/engine-dom":"2.2.3","@lwc/jest-preset":"11.0.1","@lwc/jest-resolver":"11.0.1","@lwc/jest-serializer":"11.0.1","@lwc/jest-transformer":"11.0.1","@lwc/module-resolver":"2.2.3","@lwc/synthetic-shadow":"2.2.3","@lwc/wire-service":"2.2.3","@salesforce/wire-service-jest-util":"4.0.0","chalk":"~4.1.1","fast-glob":"^3.2.5","jest":"26.6.3","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.28.0","husky":"^5.2.0","isbinaryfile":"^4.0.8","lint-staged":"^10.5.4","prettier":"^2.3.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Master vs. Prerelease\n\nTo test your components against Salesforce production instances, use the master branch. The latest release off of this branch is tagged with the npm dist-tag of `latest`.\n\nTo test against sandbox instances, use the `prerelease` branch and the version tagged as `prerelease`.\n\n### Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n### Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug Mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch Mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. We want to test the following template, `helloWorld.html`.\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick=\"{doSomething}\"></lightning-button>\n    <foo-fancy-button onclick=\"{doSomethingElse}\"></foo-fancy-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button` component. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis config tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"58f613eedb9b1b8d8ce8a97ee6b76296804544e2","_id":"@salesforce/sfdx-lwc-jest@0.14.0","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-kv0PTTXwXJ7loFHWVfzvosT3ANvbKKzJB0oTZfL7h5j/MMBBTU7wCA/Ggw6ntliqspkRK0Dr3sPxYhHCpjzKNw==","shasum":"c969b34a15f65822e5720e9bce6c7f2e589306b4","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-0.14.0.tgz","fileCount":193,"unpackedSize":106044,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3KxQCRA9TVsSAnZWagAAeRcQAI/GMDs0j29VDn4HGEF+\nR5Ey/9KIw6eul4e+9w2ONgxq3Sx4fuwsyRMuyq4+phdgV9GvXLHWDmcchTKy\nCIr/2Qw0jftsBN5yctLTlLHe81d+fEkD/DBAU+llcDYJKhlePMI45IkqWxI0\nBgsT6OdI7rNa6fm3VV4+Ol2HSI48/4W0iZi2YuWl9C9YnHaFtRrcaCCxWURh\nKufG39+QYnuCy7mEIOv0IbOREvXrsLEfWxJC5CVEXpIsIX3HUrxrgZTOM3/l\n0uApvewGwkDwLawzQnXDGcJ1R6KgSIznH4WwWsl//LhmB4mFusBuaLZRfD6+\nsHgzeoOXvpmCIht7Nk9SAIMCRsmAjAJr7mHd7GO57XkQS/UIC+Y//ZiaDnHK\n0rDYsNVyxVCHOdXaYKLA6y8lze6v5xvxxgq+zCTQgd/L2WkXhLsEXN7hsvUH\nTsRTJ03vwzBIy5b8HUhSDpFpJk9kFoeVa5OJkvNRCc4OXLmEM3NDCl8eyMAE\nMnYJg5fP/jhxaVDA3tbVtQnqJs0qRZD3zZGpF7WXX8pEbOV+sgfm8ax5rVEC\nwl5YSUA2gqpPuY5KxUWV7jCdeuwLYrdUXE4eV1SVRoeHLMicurGwLsSEXZWp\n3VjNuOo0apNkqtPNiJtwyX0AgVGdfGJ539dJmhYW3eZJUg9w1fBBW4UBHmPT\n1b2R\r\n=+a7y\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCpXyCoUaWjGFUh7Q6julh1+y5wkzzH4HJ/EvQyAC4IKAIgT96x5g8ztdowJlP93V5UTOyzYKq0Jthjk0wizCCpOV8="}]},"_npmUser":{"name":"jodarove","email":"jodarove@gmail.com"},"directories":{},"maintainers":[{"name":"svanteddu","email":"svanteddu@salesforce.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_0.14.0_1625074768052_0.3283401180236418"},"_hasShrinkwrap":false},"1.0.0":{"name":"@salesforce/sfdx-lwc-jest","version":"1.0.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"2.2.6","@lwc/engine-dom":"2.2.6","@lwc/jest-preset":"11.0.1","@lwc/jest-resolver":"11.0.1","@lwc/jest-serializer":"11.0.1","@lwc/jest-transformer":"11.0.1","@lwc/module-resolver":"2.2.6","@lwc/synthetic-shadow":"2.2.6","@lwc/wire-service":"2.2.6","@salesforce/wire-service-jest-util":"4.0.0","chalk":"~4.1.1","fast-glob":"^3.2.7","jest":"27.0.6","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.30.0","husky":"^7.0.1","isbinaryfile":"^4.0.8","lint-staged":"^11.0.0","prettier":"^2.3.2"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"c9d6a1e672b78cdb0a0fafe44499bf79330e382e","_id":"@salesforce/sfdx-lwc-jest@1.0.0","_nodeVersion":"14.17.3","_npmVersion":"6.14.13","dist":{"integrity":"sha512-ZBUe9UuxC1DZqogc5n60YNSj+VotvwzkTXtbW8G0YLyl4CPIgJHHbDWp5xGeUR8HlIArFHMEiFF8op8Rb2pOiw==","shasum":"930a131d64ce1135838bc804a1c4bd5586c2da69","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.0.0.tgz","fileCount":192,"unpackedSize":99895,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg9Y72CRA9TVsSAnZWagAAG60P/1XDqBHApQLPUTAgwDRm\nChxrKeWvGcnWAURIIx9ZyPMgtfkwVu60SJmsINhQOe+85Pb6N6p5Jnrap0ia\nwiQVEKwNYtMawfNe6nIqfE6LMVEaVylHQSUzG/VqEiSfdPGwlTgI07k5QepJ\nuBdRL18LRE9rtCWak1tDDvGKG0l4FoK3YQQcENvKW1kF6WVaGOKfE1REUZCP\nYdJfTnvZb9noXZFTvwW2VJxst/dupPeOeUHa0hND30OcKrikg2l+ify+Q3rF\nMcA8CgPqRj335GlQjSVUrKVBEwEpJZfn+UlZ+ROMtvVEoOK5mAdc94txIPes\nMFYImg+NGWJP+YWI3rOwDqKmeJAlwvtRhYR/1EM5S1fhf24L6244HInurR8F\n6rmLjV21EhZ8AwWnJlkeiE8aFyh0kCPa2elNCb/VrrH3JUldjsXMuLSVFzOq\namVPgOiTT1AsMMFLz/wv7dL9OWYm+VkHjcozF1zwUIrqkhV9qwY42OrvJRTv\nAfP5Dak0/0GmvaXFOZ6A+ZWWk6WKoycs7g02XB9cS2E3sNyYlTNrMiTEak0Q\njP+92dNtvbEtKUaOSbjc0ENooecGzxT0iik4/wVxcdsD567vlBTW7PHDHJvT\nAm9/1xTdHevZ/nS0CJmgHKCtUKz7GJcngdxvwoEiSk6aH5UXCqhjcKgTsanH\nn2Tc\r\n=TdzV\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDI49tDwvt+YxaLKQVC6GHS997u/CQ9RYnTCkWk3SBF0AIgW4sM01Nu/YNdjGeyy/ykxcNqaW2qxfCZBkwufVOsEcA="}]},"_npmUser":{"name":"abdulsattar","email":"asattar.md@gmail.com"},"directories":{},"maintainers":[{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"},{"name":"neeraj_g","email":"ngirolkar@salesforce.com"},{"name":"svanteddu","email":"svanteddu@salesforce.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.0.0_1626705654082_0.3348808845416966"},"_hasShrinkwrap":false},"1.0.1":{"name":"@salesforce/sfdx-lwc-jest","version":"1.0.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"2.2.6","@lwc/engine-dom":"2.2.6","@lwc/jest-preset":"11.2.0","@lwc/jest-resolver":"11.2.0","@lwc/jest-serializer":"11.2.0","@lwc/jest-transformer":"11.2.0","@lwc/module-resolver":"2.2.6","@lwc/synthetic-shadow":"2.2.6","@lwc/wire-service":"2.2.6","@salesforce/wire-service-jest-util":"4.0.0","chalk":"~4.1.1","fast-glob":"^3.2.7","jest":"27.0.6","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.30.0","husky":"^7.0.1","isbinaryfile":"^4.0.8","lint-staged":"^11.0.0","prettier":"^2.3.2"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"7e5c0033853a65e6b5a0c068eb346b6b9cdf6b9d","_id":"@salesforce/sfdx-lwc-jest@1.0.1","_nodeVersion":"16.5.0","_npmVersion":"7.19.1","dist":{"integrity":"sha512-rBcQTj53iAkXslViZT3RT0MG/WV0V1nT2kozQE/CVZag+FZKEKom0DDFVUMHqhjiz0oTOeRwzRpeDlvahf3rMA==","shasum":"8308e3cc436c82eba0581750be2f666412cc30af","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.0.1.tgz","fileCount":191,"unpackedSize":94929,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg+TPlCRA9TVsSAnZWagAAu/oP/RQLR5jq6S9apaRdKM7l\nDq9HzRhbsSr8JnBccecebBAULDbtzBFBo2rOFbuLyKRBwrLNbggv7e0wyUzb\nibMiBf/rbr/3i7FemQKP/D9MxefPGR06gfQgZbMLbUcLUMQwSvYH3EyLMowh\ncV7cHc+2Ypf3imbKCVTpcldugtkRfofSeYPhQ47svsMXxg5VnHVelPXnxpKY\n/ZOTNfaaMN3BAhgveSb8+tKSwqdV/a8vgYDNEh/0q9OX+kCuLZQ+xXo84aOo\nqFY3FeYJl3jgKBk5O/TnzSpVg05TSdldRJuw2kRsmtwziwvNO1uBfcRoKiTN\niXk3M9vkgLyUPFDHZ/xqewGK3wDy2hi1X02I9o7P+T2zdloMvfhNvDLJIaCD\nrJPpVsw6npzxn4AmjCwpQMVN+RxUBEZWW7iyLmMsYs7eOOn/uOxw7Fr3DVRe\nVAb2hkV/jPuLl3xjigRTb27DlFH9+hGm4g6NrpUnYwE6B6r96R1dX7qJ1pxF\nBQcp5riWirZn3+UaKYhBAWuh6NU/8nCVi8cPVO+/Nk8eMBNhK6te5AAJpxdj\nkJEhbSyxK/CNuqmD1t54sbwoiy27ZvvNqSu2ASCq/ds1C9iSXdtaxrFp1bfe\nZX3lb+O75qWVYaBLBSemEiIhBVURAPFraf4Bo1KFjsShPqRTjL4CuE2CXa7m\noy0g\r\n=SugX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiVk5rUmGLhFhOaQwIOo6k7fo7sOap2TVrTE0tsyZp+QIgH+YemTvMTNUUlTrXgKmIApJb4pLA7LiJtzijrXrIzko="}]},"_npmUser":{"name":"abdulsattar","email":"asattar.md@gmail.com"},"directories":{},"maintainers":[{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"svanteddu","email":"svanteddu@salesforce.com"},{"name":"neeraj_g","email":"ngirolkar@salesforce.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.0.1_1626944485195_0.2702674006320629"},"_hasShrinkwrap":false},"1.1.0":{"name":"@salesforce/sfdx-lwc-jest","version":"1.1.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"npm publish --access public","test":"jest"},"dependencies":{"@lwc/compiler":"2.2.11","@lwc/engine-dom":"2.2.11","@lwc/jest-preset":"11.2.0","@lwc/jest-resolver":"11.2.0","@lwc/jest-serializer":"11.2.0","@lwc/jest-transformer":"11.2.0","@lwc/module-resolver":"2.2.11","@lwc/synthetic-shadow":"2.2.11","@lwc/wire-service":"2.2.11","@salesforce/wire-service-jest-util":"4.0.0","chalk":"~4.1.1","fast-glob":"^3.2.7","jest":"27.0.6","yargs":"~17.0.1"},"devDependencies":{"babel-eslint":"^10.1.0","eslint":"^7.30.0","husky":"^7.0.1","isbinaryfile":"^4.0.8","lint-staged":"^11.0.0","prettier":"^2.3.2"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"8a1d6b5813537a7c2d290029f7659b53255431e5","_id":"@salesforce/sfdx-lwc-jest@1.1.0","_nodeVersion":"14.18.0","_npmVersion":"6.14.15","dist":{"integrity":"sha512-bYhvs9Th4qMjk4Vs66GDwloVh2LAcV8cg/j0WWbIug8MiI+KOSZL0IWZA7fqr8vXkSdArt5WjoTv4ckzfklzQA==","shasum":"036644f2931fd3c5684d97e97c6d642c904f815f","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.1.0.tgz","fileCount":192,"unpackedSize":99900,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDUorxZExssFOcMeS/9PwjDgMJ5gxGUaJzmiTeF25UTbQIgN1f6/XA+91Kk+nJfXebAVZnkTuFk9NBUC7YZEf433+M="}]},"_npmUser":{"name":"abdulsattar","email":"asattar.md@gmail.com"},"directories":{},"maintainers":[{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"rmohan20.sfdc","email":"rmohan20.sfdc@gmail.com"},{"name":"brandon-svec","email":"brandon.svec@gmail.com"},{"name":"jgraff","email":"jgraff@salesforce.com"},{"name":"cdias","email":"cdias@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"jgrantham","email":"jason.grantham@salesforce.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"suduvvuri","email":"suryaprakash.duvvuri@salesforce.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"diervo","email":"elfogris@gmail.com"},{"name":"rsalvador","email":"rsalvador@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"davidturissini","email":"davidairborne@gmail.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"maratto","email":"marat+npm@salesforce.com"},{"name":"pallavi.singh","email":"pallavi.singh@salesforce.com"},{"name":"smugakamil","email":"smugakamil@gmail.com"},{"name":"tausifm","email":"tausif.muzaffar@salesforce.com"},{"name":"kriscfoster","email":"kris.foster@ucdconnect.ie"},{"name":"brandonm","email":"bmurnane@salesforce.com"},{"name":"vineet-sinha","email":"vineet.sinha@gmail.com"},{"name":"salesforce-bot","email":"j.ward+npm@salesforce.com"},{"name":"harshkothari410","email":"harshkothari410@gmail.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"rasphilco","email":"philipe.navarro@salesforce.com"},{"name":"jbfeingold","email":"jfeingold@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"dpessoa","email":"dpessoa@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"jgellin","email":"jgellin@salesforce.com"},{"name":"maxreality","email":"m@ab3.in"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"davidrouten","email":"david@routen.io"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"nazligungor","email":"n.gungor@salesforce.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"maliroteh-sf","email":"maliroteh@salesforce.com"},{"name":"justinharringa","email":"justin@harringa.com"},{"name":"ahakro","email":"ahakro@salesforce.com"},{"name":"rjanamanchi","email":"rjanamanchi@salesforce.com"},{"name":"vttikoo","email":"vtikoo@salesforce.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"mallik.webaroo","email":"mallik.webaroo@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"alyssaa14","email":"aarvin@salesforce.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"svanteddu","email":"svanteddu@salesforce.com"},{"name":"neeraj_g","email":"ngirolkar@salesforce.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.1.0_1634243099708_0.32492376177370885"},"_hasShrinkwrap":false},"1.0.2":{"name":"@salesforce/sfdx-lwc-jest","version":"1.0.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"yarn release:publish","release:version":"npm version","release:publish":"npm publish --access public --registry=https://registry.npmjs.org","test":"jest"},"dependencies":{"@lwc/compiler":"2.11.8","@lwc/engine-dom":"2.11.8","@lwc/jest-preset":"^11.4.0","@lwc/jest-resolver":"^11.4.0","@lwc/jest-serializer":"^11.4.0","@lwc/jest-transformer":"^11.4.0","@lwc/module-resolver":"2.11.8","@lwc/synthetic-shadow":"2.11.8","@lwc/wire-service":"2.11.8","@salesforce/wire-service-jest-util":"4.0.0","chalk":"^4.1.2","fast-glob":"^3.2.10","jest":"^28.1.0","jest-environment-jsdom":"^28.1.0","yargs":"~17.5.1"},"devDependencies":{"@babel/core":"^7.18.2","@babel/eslint-parser":"^7.16.5","@babel/plugin-proposal-decorators":"^7.16.7","eslint":"^8.6.0","husky":"^8.0.1","isbinaryfile":"^5.0.0","lint-staged":"^12.1.7","prettier":"^2.5.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"d4de2a213fdc9ea2fd91b0595462f5311960a4c5","_id":"@salesforce/sfdx-lwc-jest@1.0.2","_nodeVersion":"14.17.6","_npmVersion":"6.14.15","dist":{"integrity":"sha512-AhRYPRUfAb/MTsjG9RsqfSjLxf1dNMEMQ+aEBDTR7gGtv8GygHnNMxeFddnm08vDLhaIJdIXUzn1h12xnHFRsQ==","shasum":"757bf7f65e780a9c96f85c9e7e76e324e040f9e8","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.0.2.tgz","fileCount":192,"unpackedSize":100229,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHBDl0BhdCaPH/1sUbJoLvs2FWwx7iIX4UYosD2RnP5nAiBCsuZ9KIBRuB44uhabOJYwjs30K6/HKvvqHnF8628GOA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2XR7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr0Vg/9FtTDAZPrG8ccmWMJHBhSeKbrnQiib4IFwWjVnP/ZZ8seM98+\r\nsOtnmNEWCU+3+eVfGpkoK2719DgliYksvREW2cZpRgTLz3j0Oh9jRShnsUKs\r\nBy2in3GPm2hIc6BxBt/G7Kksld5o00qi+uc3U3E3jq700HhovFxSWDjEItd7\r\nR4sgW91j61ljfouMkY8I9t18NZpikiOLWKaB54DN4kvoZFNIa4SwrNkg9XPT\r\n6vo755rcCSToiV4VyBcb8GOfITFBYP1HGWLN6G1xgZJKW0Q49ANgRsPHOjzi\r\nsQbkpoIlwrF2EhnO6IQl6tCIcKtOVZpVg0BH4HfwSM9/KKcHJYoE+u7liMTc\r\n4/OR10oUTlY8E1cEU7KT+J2iaZ1a31MIpYoN+hnxbqmt7IuDfEbvOcepSChQ\r\n2U4/t2/PGAfto07Ww+kNCA0aysNVN84vU2EjwpDS4iRWeqtNnzuvkxBZks6V\r\nUXYQJHlXkzRPecNEve2m/w5GlshJbWSK2EXnsFjlP31OPd4QGSxghB8OM6Hy\r\n6nCW34//ia/mzgL1cvDMp5AutKIo1EtV92aCVqwsfVme4zBqIw6fXg6CBJAg\r\nXKp//Al2YEbcVUeKrTP9pvzIlvXJMPc/9qQK6vJGLdX42KQ6SfLmJ6My3nNj\r\ng212gEOJKecGSwjrsk/eFBQkGANx4uk5OcI=\r\n=ElIQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"maintainers":[{"name":"jye-sf","email":"jye@salesforce.com"},{"name":"adirasanam","email":"adirasanam@salesforce.com"},{"name":"hkii","email":"knair@salesforce.com"},{"name":"mcasado","email":"mcasado@salesforce.com"},{"name":"iamaziz","email":"azizramos00@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"jc-sf","email":"junchao.zhang@salesforce.com"},{"name":"pvandyk-sf","email":"pvandyk@salesforce.com"},{"name":"dbreese-salesforce","email":"dbreese@salesforce.com"},{"name":"ashokrudraraju","email":"arudraraju@salesforce.com"},{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"mbettio","email":"mbettiomoreira@salesforce.com"},{"name":"damilareolowoniyi","email":"damilare.olowoniyi2@mail.dcu.ie"},{"name":"mmadialagan","email":"mmadialagan@salesforce.com"},{"name":"spoorti.nidagundi","email":"spoorti.nidagundi@salesforce.com"},{"name":"rodesp","email":"rodesp@hey.com"},{"name":"mjrust","email":"mrust@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.0.2_1658418298945_0.08937989448630601"},"_hasShrinkwrap":false},"1.1.1":{"name":"@salesforce/sfdx-lwc-jest","version":"1.1.1","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"yarn release:publish","release:version":"npm version","release:publish":"npm publish --access public --registry=https://registry.npmjs.org","test":"jest"},"dependencies":{"@lwc/compiler":"2.11.8","@lwc/engine-dom":"2.11.8","@lwc/jest-preset":"^11.4.0","@lwc/jest-resolver":"^11.4.0","@lwc/jest-serializer":"^11.4.0","@lwc/jest-transformer":"^11.4.0","@lwc/module-resolver":"2.11.8","@lwc/synthetic-shadow":"2.11.8","@lwc/wire-service":"2.11.8","@salesforce/wire-service-jest-util":"4.0.0","chalk":"^4.1.2","fast-glob":"^3.2.10","jest":"^28.1.0","jest-environment-jsdom":"^28.1.0","yargs":"~17.5.1"},"devDependencies":{"@babel/core":"^7.18.2","@babel/eslint-parser":"^7.16.5","@babel/plugin-proposal-decorators":"^7.16.7","eslint":"^8.6.0","husky":"^8.0.1","isbinaryfile":"^5.0.0","lint-staged":"^12.1.7","prettier":"^2.5.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"43c9e7807814aad8a882a991c307e9c9be5f4663","_id":"@salesforce/sfdx-lwc-jest@1.1.1","_nodeVersion":"14.17.6","_npmVersion":"6.14.15","dist":{"integrity":"sha512-erePBQu65q+M63NUffoQer1XjJDUXtmavgZeQDqn4mhNynS7hCux5BBwJodcxIMXVMLz3ibzyZAz4EWEGZCF4A==","shasum":"ed10c6c1635ede96c4f8bd27b4132a9ea916dfe2","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.1.1.tgz","fileCount":192,"unpackedSize":100229,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCucjxJW5GSOQmrk8j9uD38/XLuzCPU2+UJw7zohDoXzAIhAIEepHQfISNXkldZVvuOfNrRAQBnMQSq+zxC8tK0Pbz0"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2XUPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpsag//fyz8N3B19whTpY8mMH9miDBLOlqw5p3P3MCAsHASrXMJEJxW\r\nrDJEZ6XGkmxovDmuWT44sYilO4jEU7iXfulkZVugQyC4Q4cfVmx3khm4/u5H\r\nPeHub+nGbmDhEcpM4q8DfWCoImqrGJeutMeSv2JB0hKMpbRlpJvv5+bz4BII\r\nMbH8jGX8P91vzBKdGNegDseZTsxPdQ/GJnV2BVr0V4Ur+QG+oHSdj8Nuh9Ed\r\nVIlAOWP0u7COWg/tQsyIiUzWjzLn9uGF4QJ/M2/micDEdvZNz03rsbdyEoyR\r\nX0rYrp3vHg9QP70fLGDOd7tktpm4SZKiJ5ynNuSyvaju/h7+jlzv1SDrhdmP\r\naqOksoDbDmlT12kjHDfh9tFPoiB9HxydSJ9MrDN+klgGpfU+qSVH0OZFG+Pn\r\n7dhaZslqIXmZZl1hnGc3c5PBIFYaauUzGPOWy6OQiJGb8OC3bPMnCeB5vswS\r\nkOQMIS9FR4lHXck5JhxNFZtnA419zNKHn+qcivXtAj2pc2QtrwhZNdMHn+q2\r\nsiXgLwQRe0xqUCniPRjFI9ET1TptwaDCk/nOvrwd2SdhpvmjKALEY0/Il4bG\r\nEVrjJfpjmFyQIhsQxwdJ2ahHTfteJozRSA2jzsQGGTFzgqAhWd+0j7gUAkBi\r\ny3w5ZrR7Upb3/ZtDaoGfpFXhQfAe7x/VL2g=\r\n=RUBX\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},"directories":{},"maintainers":[{"name":"jye-sf","email":"jye@salesforce.com"},{"name":"adirasanam","email":"adirasanam@salesforce.com"},{"name":"hkii","email":"knair@salesforce.com"},{"name":"mcasado","email":"mcasado@salesforce.com"},{"name":"iamaziz","email":"azizramos00@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"jc-sf","email":"junchao.zhang@salesforce.com"},{"name":"pvandyk-sf","email":"pvandyk@salesforce.com"},{"name":"dbreese-salesforce","email":"dbreese@salesforce.com"},{"name":"ashokrudraraju","email":"arudraraju@salesforce.com"},{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"mbettio","email":"mbettiomoreira@salesforce.com"},{"name":"damilareolowoniyi","email":"damilare.olowoniyi2@mail.dcu.ie"},{"name":"mmadialagan","email":"mmadialagan@salesforce.com"},{"name":"spoorti.nidagundi","email":"spoorti.nidagundi@salesforce.com"},{"name":"rodesp","email":"rodesp@hey.com"},{"name":"mjrust","email":"mrust@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.1.1_1658418447260_0.018492524391886977"},"_hasShrinkwrap":false},"1.1.2":{"name":"@salesforce/sfdx-lwc-jest","version":"1.1.2","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"yarn release:publish","release:version":"npm version","release:publish":"npm publish --access public --registry=https://registry.npmjs.org","test":"jest"},"dependencies":{"@lwc/compiler":"2.11.8","@lwc/engine-dom":"2.11.8","@lwc/jest-preset":"^11.4.0","@lwc/jest-resolver":"^11.4.0","@lwc/jest-serializer":"^11.4.0","@lwc/jest-transformer":"^11.4.0","@lwc/module-resolver":"2.11.8","@lwc/synthetic-shadow":"2.11.8","@lwc/wire-service":"2.11.8","@salesforce/wire-service-jest-util":"4.0.0","chalk":"^4.1.2","fast-glob":"^3.2.10","jest":"^28.1.0","jest-environment-jsdom":"^28.1.0","yargs":"~17.5.1"},"devDependencies":{"@babel/core":"^7.18.2","@babel/eslint-parser":"^7.16.5","@babel/plugin-proposal-decorators":"^7.16.7","eslint":"^8.6.0","husky":"^8.0.1","isbinaryfile":"^5.0.0","lint-staged":"^12.1.7","prettier":"^2.5.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"10dd1d8637a2fc81d1c7033d9d7e9684975757d1","_id":"@salesforce/sfdx-lwc-jest@1.1.2","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-RVcoM3NFQ/OyNpfxWFo+BhOa5C+YpWoiWUMKP48tFOySbvyJmiJQS29VTA3LqzxI7YPqRziOtt9JI3qfEkUVdA==","shasum":"19f712564187e01e4a977e2791c471f3301b00a3","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.1.2.tgz","fileCount":206,"unpackedSize":103450,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDH6NsFwR+QnD6Q3cMiN4FMbNSHY7Gpx1ASFLC1AyWAHAIhANcHV92uibO3Pgjbf/d3jD5HvdiiC0plQ7ifksPpUTDg"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4X69ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq3Vw//Vsg46gzJJIr02lPIbRfv8lDRc/jDC23Z4bRf6U2QKTyPYWtI\r\nLOmUUQ5JNr/H4zLKlfBlF6UgS3BcJ0fFcKvlkWTVaz/ZwsW+eD9yobZ/W+Nw\r\nWCClH8hDx1oRVkI/kAhdCZcjU9Zi4YUo8ijuM3/B/NTAKnRoQle+vMzwB5Uz\r\nUkjUNleUvuy80MxrPC/uZlMlFx/YtzYrQ2qJcSCciGQyg9lYGTyo7lsP2vqY\r\nXiV/L8hUE6JwJKZmWsDouhgzcPPmNvbnHv6zaDB4OZHMF2O9JDD+8Ih5e4/Q\r\nkWl9rl7lHjYVM7AVQl4TyZKw+E/KXClCCvy8PoW7BpdMqk7gYjBF6yoaoX0h\r\nB6xSWF9D1lJifp01nV+eT9RdDb+Ats5KYqYWOszNWJAG8P2z48eL0YPxnHeu\r\nwh/ugb8QMd/rj1dnmlBMZM3maXhED082kKsV/O+mjC/BuMuj+envjfsMUox9\r\nAoH8qEazjzAiUYxyU5dXc5HFZ2wxfOM+cVXEpKXqV6jZnc6Zbrhl0ZJnK/GH\r\nKLMT25DUxdZhZlp+dgd3iB1D0GhdY1lk7H7vqMXQhtAF8ZSMaxYlQJj5l/pk\r\npGbssZWNQe7/rryRB/g4jP+wxya+8s0xHgq3tqrTVY39FOyfx7FCTxncwoY4\r\nl/hzq2o52KvNdTYe4IVT8dGmiZHBhA2HkJo=\r\n=PW28\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ekashida","email":"ekashida@gmail.com"},"directories":{},"maintainers":[{"name":"jye-sf","email":"jye@salesforce.com"},{"name":"adirasanam","email":"adirasanam@salesforce.com"},{"name":"hkii","email":"knair@salesforce.com"},{"name":"mcasado","email":"mcasado@salesforce.com"},{"name":"iamaziz","email":"azizramos00@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"jc-sf","email":"junchao.zhang@salesforce.com"},{"name":"pvandyk-sf","email":"pvandyk@salesforce.com"},{"name":"dbreese-salesforce","email":"dbreese@salesforce.com"},{"name":"ashokrudraraju","email":"arudraraju@salesforce.com"},{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"mbettio","email":"mbettiomoreira@salesforce.com"},{"name":"damilareolowoniyi","email":"damilare.olowoniyi2@mail.dcu.ie"},{"name":"mmadialagan","email":"mmadialagan@salesforce.com"},{"name":"spoorti.nidagundi","email":"spoorti.nidagundi@salesforce.com"},{"name":"rodesp","email":"rodesp@hey.com"},{"name":"mjrust","email":"mrust@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.1.2_1658945212844_0.5598204287193742"},"_hasShrinkwrap":false},"1.2.0":{"name":"@salesforce/sfdx-lwc-jest","version":"1.2.0","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"yarn release:publish","release:version":"npm version","release:publish":"npm publish --access public --registry=https://registry.npmjs.org","test":"jest"},"dependencies":{"@lwc/compiler":"2.20.3","@lwc/engine-dom":"2.20.3","@lwc/jest-preset":"^11.4.0","@lwc/jest-resolver":"^11.4.0","@lwc/jest-serializer":"^11.4.0","@lwc/jest-transformer":"^11.4.0","@lwc/module-resolver":"2.20.3","@lwc/synthetic-shadow":"2.20.3","@lwc/wire-service":"2.20.3","@salesforce/wire-service-jest-util":"4.0.0","chalk":"^4.1.2","fast-glob":"^3.2.10","jest":"^28.1.3","jest-environment-jsdom":"^28.1.3","yargs":"~17.5.1"},"devDependencies":{"@babel/core":"^7.18.9","@babel/eslint-parser":"^7.18.9","@babel/plugin-proposal-decorators":"^7.18.9","eslint":"^8.20.0","husky":"^8.0.1","isbinaryfile":"^5.0.0","lint-staged":"^13.0.3","prettier":"^2.7.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Versions\n\nTo test against the latest Salesforce production instances, use the npm tag appropriate for the current release, e.g.:\n\n```\nyarn add -D @salesforce/sfdx-lwc-jest@winter22\nyarn add -D @salesforce/sfdx-lwc-jest@spring22\n```\n\nThe npm `latest` tag corresponds to the latest version of this repo, not necessarily Salesforce production versions.\n\n## Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n## Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug Mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch Mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. We want to test the following template, `helloWorld.html`.\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick=\"{doSomething}\"></lightning-button>\n    <foo-fancy-button onclick=\"{doSomethingElse}\"></foo-fancy-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button` component. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis config tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","gitHead":"7aa04e7d56b171d8ba9b2b2aff17e6bbc0857a37","_id":"@salesforce/sfdx-lwc-jest@1.2.0","_nodeVersion":"16.16.0","_npmVersion":"8.15.1","dist":{"integrity":"sha512-ICCXHgLUvTOt5aRpYGuh0bWeYSOsK5BpJAfCm9MHfB5a+rrvfWGp4P99hCyLHb8uJGvaMSjO9g6rt05zbensQQ==","shasum":"ffea5eee3dd3fc67775dd6f3d91ab4ed681c2c6b","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.2.0.tgz","fileCount":206,"unpackedSize":103451,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQChJ+znuaMp+zXhOkflv9untQ/ArBDfXzhz70bUDN8TfgIgd5MBfawi5oSvbvLL4DkH4o/lCm6aq1Vo3e6lLB9mz5Y="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi7gRNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoegg/+JzK1WPWh30LSBUxrcmF8pEW0fdndZELsKO0cFD+ZldiceQ7p\r\nrO1t7NF3/Mdixu1HHYu9AnDhqhpCQSji7dSt+8T2GlDMKt9JX+Po2f7gojjM\r\nC8CpgXLo2Yon7Ef9hrYqnxU/FOQm7Tcch3HKIQH0KQgl+ZbFebPfXn6NMdmZ\r\negMW+zw5iOQZZYuamQ/cbAtXSnSVDm7RQOFC6sJBiB8BwIuM0Fh7K0chyfGq\r\nBzaCBFxkHXnTyT9jTwg4mtoHY2WOZBGs4BJHoz3lRKFsImkryM3DNcWn5LMY\r\nXLnjo8S1a1p5FiwLrW9lnkUCFq7tSAVySHAHLjQ2oasCDv5Yl4QgFBlhc8dU\r\nEuVomc9bwdFcPir+/KGJxQF6BY3aPAcSBsZ5IBQyb7X+RM8B+a7GT3U+BJnG\r\ne4pU4tH6auzXzA/rE9dn092ODoJOF23+NcXXb99ilHqMt3COYBVKMH2/8ZKe\r\n862QCZjCX9fjvqJnEaqAWJqoNiHsXKENoSjqUFoFFu2/KtGt6RSBo0NDNAgR\r\nzlJ9pXnyEoKRvaOt3raa8lt4Ye2b0ep2kH+ihS4KlOemqZO7A5BqmFMuOKWL\r\n2YmdQ+ZRdGWlY8xOUSrKpQi/w7MXVbVRWO/GafjM7T9P5qc3BEPjo7CRtyWS\r\nwofN22J2M12K/57HlPTn/zQUo2SOQR5l178=\r\n=ApiJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"abdulsattar","email":"asattar.md@gmail.com"},"directories":{},"maintainers":[{"name":"jye-sf","email":"jye@salesforce.com"},{"name":"adirasanam","email":"adirasanam@salesforce.com"},{"name":"hkii","email":"knair@salesforce.com"},{"name":"mcasado","email":"mcasado@salesforce.com"},{"name":"iamaziz","email":"azizramos00@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"jc-sf","email":"junchao.zhang@salesforce.com"},{"name":"pvandyk-sf","email":"pvandyk@salesforce.com"},{"name":"dbreese-salesforce","email":"dbreese@salesforce.com"},{"name":"ashokrudraraju","email":"arudraraju@salesforce.com"},{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"mbettio","email":"mbettiomoreira@salesforce.com"},{"name":"damilareolowoniyi","email":"damilare.olowoniyi2@mail.dcu.ie"},{"name":"mmadialagan","email":"mmadialagan@salesforce.com"},{"name":"spoorti.nidagundi","email":"spoorti.nidagundi@salesforce.com"},{"name":"rodesp","email":"rodesp@hey.com"},{"name":"mjrust","email":"mrust@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.2.0_1659765837469_0.669340191014218"},"_hasShrinkwrap":false},"1.1.3":{"name":"@salesforce/sfdx-lwc-jest","version":"1.1.3","description":"Run Jest against LWC components in a Salesforce DX workspace environment","main":"src/index.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"},"homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bin":{"lwc-jest":"bin/sfdx-lwc-jest","sfdx-lwc-jest":"bin/sfdx-lwc-jest"},"scripts":{"prepare":"husky install","check-license-headers":"node ./scripts/checkLicenseHeaders.js","lint":"eslint src/ tests/","format":"prettier --write '**/*.{js,json,md,html,css}'","format:check":"prettier --check '**/*.{js,json,md,html,css}'","release":"yarn release:publish","release:version":"npm version","release:publish":"npm publish --access public --registry=https://registry.npmjs.org","test":"jest"},"dependencies":{"@lwc/compiler":"2.23.2","@lwc/engine-dom":"2.23.2","@lwc/jest-preset":"^11.5.0","@lwc/jest-resolver":"^11.5.0","@lwc/jest-serializer":"^11.5.0","@lwc/jest-transformer":"^11.5.0","@lwc/module-resolver":"2.23.2","@lwc/synthetic-shadow":"2.23.2","@lwc/wire-service":"2.23.2","@salesforce/wire-service-jest-util":"4.0.0","chalk":"^4.1.2","fast-glob":"^3.2.10","jest":"^29.0.1","jest-environment-jsdom":"^29.0.1","yargs":"~17.5.1"},"devDependencies":{"@babel/core":"^7.18.13","@babel/eslint-parser":"^7.18.9","@babel/plugin-proposal-decorators":"^7.18.10","eslint":"^8.23.0","husky":"^8.0.1","isbinaryfile":"^5.0.0","lint-staged":"^13.0.3","prettier":"^2.7.1"},"lint-staged":{"*.js":"eslint","*.{js,json,md,html,css}":"prettier --write"},"gitHead":"9fd4e1c0fde6ebd74241e3d26431ad5d40f064e8","_id":"@salesforce/sfdx-lwc-jest@1.1.3","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-5UCnYC299rI+S7+ES87ZhpcycwnYXmpSy3TpMX+mbgFqrWnMJ62MRNssx2sb+VBQ7/j3T/s/pVlkJyRfZN5Kww==","shasum":"569f412bc0256636be5a47d765e4dd2f15711dcd","tarball":"https://registry.npmjs.org/@salesforce/sfdx-lwc-jest/-/sfdx-lwc-jest-1.1.3.tgz","fileCount":206,"unpackedSize":103453,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCNX9XW0Tu6C8zZFsfcqAgmceL+ChVTOxR1TO22oYakLAIgC8DmC5vicYR7Z9JFrU4tPWXQcJypKYVu8ow51NMr9cQ="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjD+uVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrDyQ/8D5zEERjnsFGgAwY2/4lQfYysimU6z+nMsNM9L/G7pawhqAxO\r\nccRYZN+HkQUq/9NMh3EqvMdWgbpWmNCx3d6kP6RAjIXkuBpkhK04F8kx2UMz\r\nepei7DpbEQ64LrF4XEtktdEpyvIZ1765hYvNYS4bTTuu1hiQssnxbpIxXkQv\r\n2EIh+p/CR8YAqdSuJ0tgfPQOclnc/KQrWwkcBB3LLQeQduc03eSNC3mvo5LJ\r\njQVU8UwKiz6ww7XSkKjRurb3idhNkTaq71Ruui+ZfMsDFDJtEE6qez7jKD9v\r\nXbpF0TI4enUJxcLMtCsj4cjZl8gjqijTDo5T0p19cPWXAvUbb/x+BOhWGs1I\r\nYpqtPXm3YPT6zWX5xCY6+VNHtXKKgvFgnvzIFGCRbTRQ99J6WhGJOsA1xJ00\r\nzTqxH2Y3qvACcAjQP5lhN2Rz8SN3ZRLdF/FkLCRg0JcVK3TNeshuX6ZJPcW1\r\nQD3XYinTo35jccaVPlz1YGLOrMyHtSo5382+OzdNxCPeqYH6EVes/kbbKVNa\r\nQA1TZR4jn7cRY+zWP8B7h4RHdwi0qr/ssx2mZuAxbcv93Qrrk4+9nA5eSKMp\r\nw4TJT40n0SJaSB5Qhoij4u/PCMQDNNMLpGx5VNLeuSw++1J/5/iVU3vtZ/t6\r\nkclbf2ntSWSphcFE4bI6GLzDIF6xrKZdqCU=\r\n=lI1U\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"nolanlawson","email":"nolan@nolanlawson.com"},"directories":{},"maintainers":[{"name":"jye-sf","email":"jye@salesforce.com"},{"name":"adirasanam","email":"adirasanam@salesforce.com"},{"name":"hkii","email":"knair@salesforce.com"},{"name":"mcasado","email":"mcasado@salesforce.com"},{"name":"iamaziz","email":"azizramos00@gmail.com"},{"name":"dlouvton","email":"dlouvton@gmail.com"},{"name":"jc-sf","email":"junchao.zhang@salesforce.com"},{"name":"pvandyk-sf","email":"pvandyk@salesforce.com"},{"name":"dbreese-salesforce","email":"dbreese@salesforce.com"},{"name":"ashokrudraraju","email":"arudraraju@salesforce.com"},{"name":"dhersam","email":"dhersam@salesforce.com"},{"name":"demianbrecht","email":"dbrecht@salesforce.com"},{"name":"mbettio","email":"mbettiomoreira@salesforce.com"},{"name":"damilareolowoniyi","email":"damilare.olowoniyi2@mail.dcu.ie"},{"name":"mmadialagan","email":"mmadialagan@salesforce.com"},{"name":"spoorti.nidagundi","email":"spoorti.nidagundi@salesforce.com"},{"name":"rodesp","email":"rodesp@hey.com"},{"name":"mjrust","email":"mrust@salesforce.com"},{"name":"salesforce-releases","email":"alm-cli@salesforce.com"},{"name":"conal","email":"conalc86@gmail.com"},{"name":"vazexqi","email":"nchen.dev@mac.com"},{"name":"joshwlewis","email":"josh.w.lewis@gmail.com"},{"name":"mpsenn","email":"msenn@salesforce.com"},{"name":"sfdc_iamigo","email":"igoldstein@salesforce.com"},{"name":"kevinv11n","email":"kevin@v11n.com"},{"name":"tbliss","email":"tbliss@salesforce.com"},{"name":"byao","email":"bobbyyao@gmail.com"},{"name":"pmdartus","email":"dartus.pierremarie@gmail.com"},{"name":"futuremint_sf","email":"dwoodward@salesforce.com"},{"name":"interactivellama","email":"llama@interactivellama.com"},{"name":"ekashida","email":"ekashida@gmail.com"},{"name":"gr8gatsby","email":"kevinhill@live.com"},{"name":"ravi.jayaramappa","email":"ravi.jayaramappa@salesforce.com"},{"name":"apapko","email":"apapko@salesforce.com"},{"name":"krisgraysfdc","email":"kgray@salesforce.com"},{"name":"jleen-sfdc","email":"jleen@salesforce.com"},{"name":"jqian","email":"jqian@salesforce.com"},{"name":"cwallsf","email":"cwall@salesforce.com"},{"name":"dhagberg-sf","email":"dhagberg@salesforce.com"},{"name":"michaelhoefer","email":"michaelhoefer@gmail.com"},{"name":"tlohr","email":"tlohr@salesforce.com"},{"name":"khawkins","email":"khawkins@salesforce.com"},{"name":"amphro","email":"amphro@gmail.com"},{"name":"tconn","email":"tconn@salesforce.com"},{"name":"dehru","email":"dehru2@yahoo.com"},{"name":"abdulsattar","email":"asattar.md@gmail.com"},{"name":"jodarove","email":"jodarove@gmail.com"},{"name":"rxu-sfdc","email":"rxu@salesforce.com"},{"name":"amcconnell-sf","email":"amcconnell@salesforce.com"},{"name":"nolanlawson","email":"nolan@nolanlawson.com"},{"name":"sfdctaka","email":"t.arai@salesforce.com"},{"name":"fernomac","email":"no_oneatall@hotmail.com"},{"name":"cafreeman","email":"cfreeman.code@gmail.com"},{"name":"jimjag","email":"jimjag@gmail.com"},{"name":"ivarley","email":"ian@ianvarley.com"},{"name":"jbartolotta-sfdc","email":"jbartolotta@salesforce.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sfdx-lwc-jest_1.1.3_1661987733540_0.24903205514739124"},"_hasShrinkwrap":false}},"time":{"created":"2019-08-08T23:11:53.076Z","0.5.3":"2019-08-08T23:11:53.248Z","modified":"2022-09-09T22:15:43.642Z","0.5.4":"2019-08-08T23:38:00.730Z","0.6.0":"2019-08-13T17:51:36.691Z","0.6.1-alpha1":"2019-10-08T19:13:48.350Z","0.6.1-alpha2":"2019-10-08T20:07:37.285Z","0.5.5":"2019-10-09T00:38:36.472Z","0.6.1":"2019-10-09T16:11:36.405Z","0.6.2":"2019-11-25T13:43:29.040Z","0.7.0":"2020-01-22T21:28:52.126Z","0.7.1":"2020-03-04T15:48:47.535Z","0.8.0":"2020-05-06T01:13:12.130Z","0.9.0":"2020-06-17T23:17:08.145Z","0.9.1":"2020-06-22T19:26:27.257Z","0.9.2":"2020-07-22T18:22:31.106Z","0.10.0":"2020-09-15T19:33:29.213Z","0.10.1":"2020-09-17T20:37:38.209Z","0.10.2":"2020-10-20T23:21:58.611Z","0.10.3":"2021-01-14T23:47:20.601Z","0.11.0":"2021-01-27T14:10:47.472Z","0.10.4":"2021-01-27T14:14:17.329Z","0.12.0":"2021-03-24T17:44:43.225Z","0.12.1":"2021-03-29T16:35:37.584Z","0.12.2":"2021-03-31T23:14:24.372Z","0.12.3":"2021-04-12T17:38:44.316Z","0.12.4":"2021-06-17T15:29:43.293Z","0.12.5":"2021-06-18T07:20:28.599Z","0.13.0":"2021-06-18T07:24:07.798Z","0.12.6":"2021-06-30T17:10:14.925Z","0.14.0":"2021-06-30T17:39:28.263Z","1.0.0":"2021-07-19T14:40:54.246Z","1.0.1":"2021-07-22T09:01:25.359Z","1.1.0":"2021-10-14T20:24:59.891Z","1.0.2":"2022-07-21T15:44:59.124Z","1.1.1":"2022-07-21T15:47:27.484Z","1.1.2":"2022-07-27T18:06:53.026Z","1.2.0":"2022-08-06T06:03:57.619Z","1.1.3":"2022-08-31T23:15:33.703Z"},"maintainers":[{"email":"jye@salesforce.com","name":"jye-sf"},{"email":"adirasanam@salesforce.com","name":"adirasanam"},{"email":"knair@salesforce.com","name":"hkii"},{"email":"mcasado@salesforce.com","name":"mcasado"},{"email":"azizramos00@gmail.com","name":"iamaziz"},{"email":"dlouvton@gmail.com","name":"dlouvton"},{"email":"junchao.zhang@salesforce.com","name":"jc-sf"},{"email":"pvandyk@salesforce.com","name":"pvandyk-sf"},{"email":"dbreese@salesforce.com","name":"dbreese-salesforce"},{"email":"arudraraju@salesforce.com","name":"ashokrudraraju"},{"email":"dhersam@salesforce.com","name":"dhersam"},{"email":"dbrecht@salesforce.com","name":"demianbrecht"},{"email":"mbettiomoreira@salesforce.com","name":"mbettio"},{"email":"damilare.olowoniyi2@mail.dcu.ie","name":"damilareolowoniyi"},{"email":"mmadialagan@salesforce.com","name":"mmadialagan"},{"email":"spoorti.nidagundi@salesforce.com","name":"spoorti.nidagundi"},{"email":"rodesp@hey.com","name":"rodesp"},{"email":"mrust@salesforce.com","name":"mjrust"},{"email":"alm-cli@salesforce.com","name":"salesforce-releases"},{"email":"conalc86@gmail.com","name":"conal"},{"email":"nchen.dev@mac.com","name":"vazexqi"},{"email":"josh.w.lewis@gmail.com","name":"joshwlewis"},{"email":"msenn@salesforce.com","name":"mpsenn"},{"email":"igoldstein@salesforce.com","name":"sfdc_iamigo"},{"email":"kevin@v11n.com","name":"kevinv11n"},{"email":"tbliss@salesforce.com","name":"tbliss"},{"email":"bobbyyao@gmail.com","name":"byao"},{"email":"dartus.pierremarie@gmail.com","name":"pmdartus"},{"email":"dwoodward@salesforce.com","name":"futuremint_sf"},{"email":"ekashida@gmail.com","name":"ekashida"},{"email":"kevinhill@live.com","name":"gr8gatsby"},{"email":"ravi.jayaramappa@salesforce.com","name":"ravi.jayaramappa"},{"email":"apapko@salesforce.com","name":"apapko"},{"email":"kgray@salesforce.com","name":"krisgraysfdc"},{"email":"jleen@salesforce.com","name":"jleen-sfdc"},{"email":"jqian@salesforce.com","name":"jqian"},{"email":"cwall@salesforce.com","name":"cwallsf"},{"email":"dhagberg@salesforce.com","name":"dhagberg-sf"},{"email":"michaelhoefer@gmail.com","name":"michaelhoefer"},{"email":"tlohr@salesforce.com","name":"tlohr"},{"email":"khawkins@salesforce.com","name":"khawkins"},{"email":"amphro@gmail.com","name":"amphro"},{"email":"tconn@salesforce.com","name":"tconn"},{"email":"dehru2@yahoo.com","name":"dehru"},{"email":"asattar.md@gmail.com","name":"abdulsattar"},{"email":"jodarove@gmail.com","name":"jodarove"},{"email":"rxu@salesforce.com","name":"rxu-sfdc"},{"email":"amcconnell@salesforce.com","name":"amcconnell-sf"},{"email":"nolan@nolanlawson.com","name":"nolanlawson"},{"email":"t.arai@salesforce.com","name":"sfdctaka"},{"email":"no_oneatall@hotmail.com","name":"fernomac"},{"email":"cfreeman.code@gmail.com","name":"cafreeman"},{"email":"jimjag@gmail.com","name":"jimjag"},{"email":"ian@ianvarley.com","name":"ivarley"},{"email":"jbartolotta@salesforce.com","name":"jbartolotta-sfdc"}],"description":"Run Jest against LWC components in a Salesforce DX workspace environment","repository":{"type":"git","url":"git+https://github.com/salesforce/sfdx-lwc-jest.git"},"license":"MIT","readme":"# @salesforce/sfdx-lwc-jest\n\nRun Jest against Lightning web components in a Salesforce DX workspace environment.\n\n## Versions\n\nTo test against the latest Salesforce production instances, use the npm tag appropriate for the current release, e.g.:\n\n```\nyarn add -D @salesforce/sfdx-lwc-jest@winter22\nyarn add -D @salesforce/sfdx-lwc-jest@spring22\n```\n\nThe npm `latest` tag corresponds to the latest version of this repo, not necessarily Salesforce production versions.\n\n## Invalid sourceApiVersion found in sfdx-project.json\n\nIf you see this error while running tests in your Salesforce DX project, it most likely means you are using the incorrect version of this project.\n\nFor example, the error message `Invalid sourceApiVersion found in sfdx-project.json. Expected 45.0, found 46.0` means this project is targeted to API version 45.0, which maps to Spring '19, but the Salesforce DX project the tests are run in is using API version 46.0, which maps to Summer '19. The version check is done against the projects `sourceApiVersion` field in the `sfdx-project.json` file at the top level of the project.\n\nTo fix this issue, make sure the most recent version of this project is being used, or switch to the `prerelease` version, depending on what release your target org is on.\n\n## Disabling the sourceApiVersion check\n\nThe `sourceApiVersion` field check is not a perfect check. Projects may be targeting orgs that are on the current release, but still have an older `sourceApiVersion` value set in their `sfdx-project.json` file. To disable this check, run tests with the `--skipApiVersionCheck` flag set.\n\n**Note that by doing this, you risk running with an old version of the test runner and your tests may be using an out of date version of the LWC framework. To ensure tests are always run with the proper framework version and configuration, make sure to be on the most recent `latest` or `prerelease` tagged version of this package.**\n\n## Installation\n\nAdd this project as a devDependency:\n\n```bash\nyarn add -D @salesforce/sfdx-lwc-jest\n```\n\nUpdate your project's unit testing script in `package.json` to execute `sfdx-lwc-jest`:\n\n```json\n{\n    \"scripts\": {\n        \"test:unit\": \"sfdx-lwc-jest\",\n        \"test:unit:watch\": \"sfdx-lwc-jest --watch\",\n        \"test:unit:debug\": \"sfdx-lwc-jest --debug\",\n        \"test:unit:coverage\": \"sfdx-lwc-jest --coverage\"\n    }\n}\n```\n\n`test:unit` runs all your tests. `test:unit:watch` and `test:unit:debug` run Jest in watch and debug mode (see below).\n\nAlternatively, you can globally install the package and run directly from the command line.\n\n## Usage\n\n```\n`sfdx-lwc-jest [options]` runs Jest unit tests in SFDX workspace\n\nOptions:\n      --version              Show version number                       [boolean]\n      --coverage             Collect coverage and display in output\n                                                      [boolean] [default: false]\n  -u, --updateSnapshot       Re-record every snapshot that fails during a test\n                             run                      [boolean] [default: false]\n      --verbose              Display individual test results with the test suite\n                             hierarchy                [boolean] [default: false]\n      --watch                Watch files for changes and rerun tests related to\n                             changed files            [boolean] [default: false]\n      --debug                Run tests in debug mode\n                             (https://jestjs.io/docs/en/troubleshooting)\n                                                      [boolean] [default: false]\n      --skipApiVersionCheck  Disable the \"sourceApiVersion\" field check before\n                             running tests. **Warning** By disabling this check\n                             you risk running tests against stale versions of\n                             the framework. See details here:\n                             https://github.com/salesforce/sfdx-lwc-jest#disabli\n                             ng-the-sourceApiVersion-check\n                                                      [boolean] [default: false]\n      --help                 Show help                                 [boolean]\n\nExamples:\n  sfdx-lwc-jest --coverage  Collect coverage and display in output\n  sfdx-lwc-jest -- --json   All params after `--` are directly passed to Jest\n```\n\n## Passing Additional Jest CLI Options\n\nTo pass any additional Jest CLI options to your run, pass them after the `--` flag. All CLI parameters after the flag are passed directly to Jest.\n\n```bash\nsfdx-lwc-jest -- --json\n```\n\nSee the [Jest documentation](http://facebook.github.io/jest/docs/en/cli.html) for all CLI options.\n\n## Debug Mode\n\nDebug mode lets you easily debug your Jest tests.\n\n-   Put a `debugger;` into your code\n-   Open `chrome://inspect`\n-   Run `sfdx-lwc-jest` with the `--debug` flag.\n\nPass other parameters to Jest after the `--` flag. For example,\n\n```bash\nsfdx-lwc-jest --debug -- --no-cache\n```\n\n### Debugging in Visual Studio Code\n\nIf you prefer to debug inside Visual Studio Code, follow these steps:\n\n-   From the Visual Studio Code dropdowns, select Debug > Add Configuration....\n-   If you're prompted for an Environment choose any value.\n-   Mac users, replace the contents of the generated `launch.json` with the following. (for Windows users see the [Jest website](https://jestjs.io/docs/en/troubleshooting#debugging-in-vs-code) for launch.json contents).\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Jest Tests\",\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"--inspect-brk\",\n                \"${workspaceRoot}/node_modules/.bin/jest\",\n                \"--runInBand\"\n            ],\n            \"console\": \"integratedTerminal\",\n            \"internalConsoleOptions\": \"neverOpen\",\n            \"port\": 9229\n        }\n    ]\n}\n```\n\n-   Add a `jest.config.js` file to the root of the Salesforce DX project as described [here](#overriding-jest-config). You must add this file to run Jest from Visual Studio Code.\n-   To run tests, press F5 or select Debug > Start Debugging.\n\n## Watch Mode\n\nWatch mode causes Jest to monitor files for changes and rerun tests related to the changed files. This is a great way to rapidly make component and test changes while monitoring tests results.\n\n## Overriding Jest Config\n\n`sfdx-lwc-jest` sets up all the necessary Jest [configs](http://facebook.github.io/jest/docs/en/configuration.html) for you to run tests out of the box without any additional changes. To override any options or set additional ones, create a file called `jest.config.js` at the root of your Salesforce DX project, import the default config from `sfdx-lwc-jest`, modify as you please, and then export the new config.\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    // add any custom configurations here\n};\n```\n\n## Resolving External Lightning Web Components\n\nIf a Lightning web component isn't located in the local `lwc` directory of your Salesforce DX project, you must mock it in your Jest tests. This package includes a set of stubs for all components in the `lightning` namespace.\n\n### Lightning Namespaced Component Stubs\n\nThis package installs stubs for the `lightning` base components to the `src/lightning-stubs` directory. These stubs are used automatically when running tests through `sfdx-lwc-jest`. To override the default stub provided for your project, override the `moduleNameMapper` config as described in [Other Component Mocks](#other-component-mocks).\n\n### Other Component Mocks\n\nFor components from other namespaces, not in your local `lwc` directory, create your own mock and update the Jest config to map the name of these components to the mock file.\n\nLet's go through an example. We want to test the following template, `helloWorld.html`.\n\n```html\n<template>\n    Hello From a Lightning Web Component!\n    <lightning-button onclick=\"{doSomething}\"></lightning-button>\n    <foo-fancy-button onclick=\"{doSomethingElse}\"></foo-fancy-button>\n</template>\n```\n\nBecause it's in the `lightning` namespace, the `lightning-button` just works. However, you must write some code to help the Jest resolver find the `foo-fancy-button` component. First, create a `jest.config.js` file at the root of the Salesforce DX project workspace and add the following:\n\n```js\nconst { jestConfig } = require('@salesforce/sfdx-lwc-jest/config');\nmodule.exports = {\n    ...jestConfig,\n    moduleNameMapper: {\n        '^foo/fancyButton$': '<rootDir>/force-app/test/jest-mocks/foo/fancyButton',\n    },\n};\n```\n\nThis config tells Jest to map the import for `foo-fancy-button` to the provided file. Notice that the first dash is converted to a forward slash and the rest of the component name goes from kebab to camel case. The reason for the forward slash is because the module resolver treats everything before the first dash as the namespace. Here, `<rootDir>` maps to the root of the Salesforce DX workspace. Note that this file location is not required, just an example.\n\nYou also have the freedom to make these mock implementations as sophisticated or simple as you'd like. In this example, we'll keep `foo-fancy-button` simple with an empty template and no functionality in the `.js` file, but you can always add whatever markup you'd like or implement functionality like any other Lightning web component.\n\nFinally, we need to create the mock `foo-fancy-button` files. In the `force-app/test/jest-mocks/foo` directory create the following files:\n\n```html\n<!-- fancyButton.html -->\n<template></template>\n```\n\n```js\n// fancyButton.js\nimport { LightningElement, api } from 'lwc';\nexport default class FancyButton extends LightningElement {\n    @api label;\n    // any other implementation you may want to expose here\n}\n```\n\n## Testing @wire Adapters\n\nTo provision data through `@wire` adapters in unit tests, use the APIs provided by [`@salesforce/wire-service-jest-util`](https://github.com/salesforce/wire-service-jest-util). These APIs are exposed through this package so you do not need to include another dependency in your package.json.\n\nSee the `@salesforce/wire-service-jest-util` [README](https://github.com/salesforce/wire-service-jest-util/blob/master/README.md) for further documentation on these APIs.\n","readmeFilename":"README.md","homepage":"https://github.com/salesforce/sfdx-lwc-jest#readme","bugs":{"url":"https://github.com/salesforce/sfdx-lwc-jest/issues"}}